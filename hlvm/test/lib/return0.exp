#===-test/lib/identity.exp - Script for identity tests ---------------------===#
#
#                      High Level Virtual Machine (HLVM)
# 
#  Copyright (C) 2006 Reid Spencer. All Rights Reserved.
# 
#  This software is free software; you can redistribute it and/or modify it 
#  under the terms of the GNU Lesser General Public License as published by 
#  the Free Software Foundation; either version 2.1 of the License, or (at 
#  your option) any later version.
# 
#  This software is distributed in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#  FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for 
#  more details.
# 
#  You should have received a copy of the GNU Lesser General Public License 
#  along with this library in the file named LICENSE.txt; if not, write to the 
#  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
#  MA 02110-1301 USA
# 
#===------------------------------------------------------------------------===#
proc hlvm-ret-zero-test { pat } {
  global srcdir subdir objdir tmpdir objrootdir llcpath
  set outdir [file join $objdir $subdir]
  set compiler [file join $objrootdir tools hlvm-compiler hlvm-compiler ]
  set source [file join $srcdir $subdir ]
  set files [lsort [
    glob -nocomplain -tails -types {f r} -directory $source $pat]]
  set dirs [lsort [
    glob -nocomplain -tails -types {d r} -directory $source *]]

  if { [file isdirectory $outdir] } {
    cd $outdir
  } else {
    if { [file exists $outdir] } {
      fail "identity: $outdir exists and is not a directory. Remove it"
      exit(2)
    } else {
      file mkdir $outdir
    }
  }
  
  foreach test $files {
    set output [file join $outdir ${test}.out]
    set testsrc [file join $source $test]
    set testexe [file rootname $test]
    set execout ""
    set retval [ catch { exec -keepnewline $compiler $testsrc -llvmbc -o - | $llcpath -f -march x86 -o $testexe } msg ]
    if { $retval != 0 } {
      fail "$test: $testexe returned $retval\n$msg"
    } else {
      # Run the program compiled and see if it returns 0
      set retval [ catch {exec $testexe } msg ]
      if {$retval == 1} {
        fail "$test: return 0 test failed:\n$msg"
      } else {
        pass "$test"
      }
    }
  }
}
