// Generated by llvm2cpp - DO NOT MODIFY!


Function* makeLLVMFunction(Module *mod) {

// Type Definitions
PointerType* PointerTy_0 = PointerType::get(IntegerType::get(mod->getContext(), 8), 0);

std::vector<const Type*>FuncTy_1_args;
FuncTy_1_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_1_args.push_back(PointerTy_0);
FunctionType* FuncTy_1 = FunctionType::get(
 /*Result=*/PointerTy_0,
 /*Params=*/FuncTy_1_args,
 /*isVarArg=*/false);

std::vector<const Type*>FuncTy_3_args;
FuncTy_3_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_3 = FunctionType::get(
 /*Result=*/PointerTy_0,
 /*Params=*/FuncTy_3_args,
 /*isVarArg=*/false);

PointerType* PointerTy_2 = PointerType::get(FuncTy_3, 0);

std::vector<const Type*>StructTy_struct_mvm__MutatorThread_fields;
std::vector<const Type*>StructTy_struct_mvm__Thread_fields;
std::vector<const Type*>StructTy_struct_mvm__CircularBase_fields;
std::vector<const Type*>FuncTy_7_args;
FunctionType* FuncTy_7 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_7_args,
 /*isVarArg=*/true);

PointerType* PointerTy_6 = PointerType::get(FuncTy_7, 0);

PointerType* PointerTy_5 = PointerType::get(PointerTy_6, 0);

StructTy_struct_mvm__CircularBase_fields.push_back(PointerTy_5);
PATypeHolder StructTy_struct_mvm__CircularBase_fwd = OpaqueType::get(mod->getContext());
PointerType* PointerTy_8 = PointerType::get(StructTy_struct_mvm__CircularBase_fwd, 0);

StructTy_struct_mvm__CircularBase_fields.push_back(PointerTy_8);
StructTy_struct_mvm__CircularBase_fields.push_back(PointerTy_8);
StructType* StructTy_struct_mvm__CircularBase = StructType::get(mod->getContext(), StructTy_struct_mvm__CircularBase_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::CircularBase", StructTy_struct_mvm__CircularBase);
cast<OpaqueType>(StructTy_struct_mvm__CircularBase_fwd.get())->refineAbstractTypeTo(StructTy_struct_mvm__CircularBase);
StructTy_struct_mvm__CircularBase = cast<StructType>(StructTy_struct_mvm__CircularBase_fwd.get());


StructTy_struct_mvm__Thread_fields.push_back(StructTy_struct_mvm__CircularBase);
StructTy_struct_mvm__Thread_fields.push_back(IntegerType::get(mod->getContext(), 32));
std::vector<const Type*>StructTy_struct_mvm__VirtualMachine_fields;
StructTy_struct_mvm__VirtualMachine_fields.push_back(PointerTy_5);
std::vector<const Type*>StructTy_struct_mvm__BumpPtrAllocator_fields;
std::vector<const Type*>StructTy_struct_mvm__SpinLock_fields;
StructTy_struct_mvm__SpinLock_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType* StructTy_struct_mvm__SpinLock = StructType::get(mod->getContext(), StructTy_struct_mvm__SpinLock_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::SpinLock", StructTy_struct_mvm__SpinLock);

StructTy_struct_mvm__BumpPtrAllocator_fields.push_back(StructTy_struct_mvm__SpinLock);
std::vector<const Type*>StructTy_struct_llvm__BumpPtrAllocator_fields;
StructTy_struct_llvm__BumpPtrAllocator_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_llvm__BumpPtrAllocator_fields.push_back(IntegerType::get(mod->getContext(), 32));
std::vector<const Type*>StructTy_struct_llvm__SlabAllocator_fields;
StructTy_struct_llvm__SlabAllocator_fields.push_back(PointerTy_5);
StructType* StructTy_struct_llvm__SlabAllocator = StructType::get(mod->getContext(), StructTy_struct_llvm__SlabAllocator_fields, /*isPacked=*/false);
mod->addTypeName("struct.llvm::SlabAllocator", StructTy_struct_llvm__SlabAllocator);

PointerType* PointerTy_11 = PointerType::get(StructTy_struct_llvm__SlabAllocator, 0);

StructTy_struct_llvm__BumpPtrAllocator_fields.push_back(PointerTy_11);
std::vector<const Type*>StructTy_struct_llvm__MemSlab_fields;
StructTy_struct_llvm__MemSlab_fields.push_back(IntegerType::get(mod->getContext(), 32));
PATypeHolder PointerTy_12_fwd = OpaqueType::get(mod->getContext());
StructTy_struct_llvm__MemSlab_fields.push_back(PointerTy_12_fwd);
StructType* StructTy_struct_llvm__MemSlab = StructType::get(mod->getContext(), StructTy_struct_llvm__MemSlab_fields, /*isPacked=*/false);
mod->addTypeName("struct.llvm::MemSlab", StructTy_struct_llvm__MemSlab);

PointerType* PointerTy_12 = PointerType::get(StructTy_struct_llvm__MemSlab, 0);
cast<OpaqueType>(PointerTy_12_fwd.get())->refineAbstractTypeTo(PointerTy_12);
PointerTy_12 = cast<PointerType>(PointerTy_12_fwd.get());


StructTy_struct_llvm__BumpPtrAllocator_fields.push_back(PointerTy_12);
StructTy_struct_llvm__BumpPtrAllocator_fields.push_back(PointerTy_0);
StructTy_struct_llvm__BumpPtrAllocator_fields.push_back(PointerTy_0);
StructTy_struct_llvm__BumpPtrAllocator_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType* StructTy_struct_llvm__BumpPtrAllocator = StructType::get(mod->getContext(), StructTy_struct_llvm__BumpPtrAllocator_fields, /*isPacked=*/false);
mod->addTypeName("struct.llvm::BumpPtrAllocator", StructTy_struct_llvm__BumpPtrAllocator);

StructTy_struct_mvm__BumpPtrAllocator_fields.push_back(StructTy_struct_llvm__BumpPtrAllocator);
StructType* StructTy_struct_mvm__BumpPtrAllocator = StructType::get(mod->getContext(), StructTy_struct_mvm__BumpPtrAllocator_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::BumpPtrAllocator", StructTy_struct_mvm__BumpPtrAllocator);

PointerType* PointerTy_10 = PointerType::get(StructTy_struct_mvm__BumpPtrAllocator, 0);

StructTy_struct_mvm__VirtualMachine_fields.push_back(PointerTy_10);
PATypeHolder StructTy_struct_mvm__Thread_fwd = OpaqueType::get(mod->getContext());
PointerType* PointerTy_13 = PointerType::get(StructTy_struct_mvm__Thread_fwd, 0);

StructTy_struct_mvm__VirtualMachine_fields.push_back(PointerTy_13);
StructTy_struct_mvm__VirtualMachine_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_mvm__VirtualMachine_fields.push_back(StructTy_struct_mvm__SpinLock);
std::vector<const Type*>StructTy_struct_mvm__CooperativeCollectionRV_fields;
std::vector<const Type*>StructTy_struct_mvm__CollectionRV_fields;
StructTy_struct_mvm__CollectionRV_fields.push_back(PointerTy_5);
std::vector<const Type*>StructTy_struct_mvm__LockNormal_fields;
std::vector<const Type*>StructTy_struct_mvm__Lock_fields;
StructTy_struct_mvm__Lock_fields.push_back(PointerTy_5);
StructTy_struct_mvm__Lock_fields.push_back(PointerTy_13);
std::vector<const Type*>StructTy_union_pthread_mutex_t_fields;
std::vector<const Type*>StructTy_struct__1__pthread_mutex_s_fields;
StructTy_struct__1__pthread_mutex_s_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct__1__pthread_mutex_s_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct__1__pthread_mutex_s_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct__1__pthread_mutex_s_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct__1__pthread_mutex_s_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct__1__pthread_mutex_s_fields.push_back(StructTy_struct_mvm__SpinLock);
StructType* StructTy_struct__1__pthread_mutex_s = StructType::get(mod->getContext(), StructTy_struct__1__pthread_mutex_s_fields, /*isPacked=*/false);
mod->addTypeName("struct..1__pthread_mutex_s", StructTy_struct__1__pthread_mutex_s);

StructTy_union_pthread_mutex_t_fields.push_back(StructTy_struct__1__pthread_mutex_s);
StructType* StructTy_union_pthread_mutex_t = StructType::get(mod->getContext(), StructTy_union_pthread_mutex_t_fields, /*isPacked=*/false);
mod->addTypeName("union.pthread_mutex_t", StructTy_union_pthread_mutex_t);

StructTy_struct_mvm__Lock_fields.push_back(StructTy_union_pthread_mutex_t);
StructType* StructTy_struct_mvm__Lock = StructType::get(mod->getContext(), StructTy_struct_mvm__Lock_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::Lock", StructTy_struct_mvm__Lock);

StructTy_struct_mvm__LockNormal_fields.push_back(StructTy_struct_mvm__Lock);
StructType* StructTy_struct_mvm__LockNormal = StructType::get(mod->getContext(), StructTy_struct_mvm__LockNormal_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::LockNormal", StructTy_struct_mvm__LockNormal);

StructTy_struct_mvm__CollectionRV_fields.push_back(StructTy_struct_mvm__LockNormal);
std::vector<const Type*>StructTy_struct_mvm__Cond_fields;
std::vector<const Type*>StructTy_union_pthread_cond_t_fields;
std::vector<const Type*>StructTy_struct__2__13_fields;
StructTy_struct__2__13_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct__2__13_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct__2__13_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct__2__13_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct__2__13_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct__2__13_fields.push_back(PointerTy_0);
StructTy_struct__2__13_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct__2__13_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType* StructTy_struct__2__13 = StructType::get(mod->getContext(), StructTy_struct__2__13_fields, /*isPacked=*/false);
mod->addTypeName("struct..2._13", StructTy_struct__2__13);

StructTy_union_pthread_cond_t_fields.push_back(StructTy_struct__2__13);
ArrayType* ArrayTy_14 = ArrayType::get(IntegerType::get(mod->getContext(), 32), 1);

StructTy_union_pthread_cond_t_fields.push_back(ArrayTy_14);
StructType* StructTy_union_pthread_cond_t = StructType::get(mod->getContext(), StructTy_union_pthread_cond_t_fields, /*isPacked=*/false);
mod->addTypeName("union.pthread_cond_t", StructTy_union_pthread_cond_t);

StructTy_struct_mvm__Cond_fields.push_back(StructTy_union_pthread_cond_t);
StructType* StructTy_struct_mvm__Cond = StructType::get(mod->getContext(), StructTy_struct_mvm__Cond_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::Cond", StructTy_struct_mvm__Cond);

StructTy_struct_mvm__CollectionRV_fields.push_back(StructTy_struct_mvm__Cond);
StructTy_struct_mvm__CollectionRV_fields.push_back(StructTy_struct_mvm__Cond);
StructTy_struct_mvm__CollectionRV_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType* StructTy_struct_mvm__CollectionRV = StructType::get(mod->getContext(), StructTy_struct_mvm__CollectionRV_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::CollectionRV", StructTy_struct_mvm__CollectionRV);

StructTy_struct_mvm__CooperativeCollectionRV_fields.push_back(StructTy_struct_mvm__CollectionRV);
StructType* StructTy_struct_mvm__CooperativeCollectionRV = StructType::get(mod->getContext(), StructTy_struct_mvm__CooperativeCollectionRV_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::CooperativeCollectionRV", StructTy_struct_mvm__CooperativeCollectionRV);

StructTy_struct_mvm__VirtualMachine_fields.push_back(StructTy_struct_mvm__CooperativeCollectionRV);
std::vector<const Type*>StructTy_struct_mvm__FunctionMap_fields;
std::vector<const Type*>StructTy_struct_std__map_const_char_j3__ClassPrimitive__std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_______fields;
std::vector<const Type*>StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_______fields;
std::vector<const Type*>StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_________Rb_tree_impl_std__less_const_char__false__fields;
std::vector<const Type*>StructTy_struct___gnu_cxx__new_allocator_gc___fields;
StructTy_struct___gnu_cxx__new_allocator_gc___fields.push_back(IntegerType::get(mod->getContext(), 8));
StructType* StructTy_struct___gnu_cxx__new_allocator_gc__ = StructType::get(mod->getContext(), StructTy_struct___gnu_cxx__new_allocator_gc___fields, /*isPacked=*/true);
mod->addTypeName("struct.__gnu_cxx::new_allocator<gc*>", StructTy_struct___gnu_cxx__new_allocator_gc__);

StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_________Rb_tree_impl_std__less_const_char__false__fields.push_back(StructTy_struct___gnu_cxx__new_allocator_gc__);
std::vector<const Type*>StructTy_struct_std___Rb_tree_node_base_fields;
StructTy_struct_std___Rb_tree_node_base_fields.push_back(IntegerType::get(mod->getContext(), 32));
PATypeHolder StructTy_struct_std___Rb_tree_node_base_fwd = OpaqueType::get(mod->getContext());
PointerType* PointerTy_15 = PointerType::get(StructTy_struct_std___Rb_tree_node_base_fwd, 0);

StructTy_struct_std___Rb_tree_node_base_fields.push_back(PointerTy_15);
StructTy_struct_std___Rb_tree_node_base_fields.push_back(PointerTy_15);
StructTy_struct_std___Rb_tree_node_base_fields.push_back(PointerTy_15);
StructType* StructTy_struct_std___Rb_tree_node_base = StructType::get(mod->getContext(), StructTy_struct_std___Rb_tree_node_base_fields, /*isPacked=*/false);
mod->addTypeName("struct.std::_Rb_tree_node_base", StructTy_struct_std___Rb_tree_node_base);
cast<OpaqueType>(StructTy_struct_std___Rb_tree_node_base_fwd.get())->refineAbstractTypeTo(StructTy_struct_std___Rb_tree_node_base);
StructTy_struct_std___Rb_tree_node_base = cast<StructType>(StructTy_struct_std___Rb_tree_node_base_fwd.get());


StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_________Rb_tree_impl_std__less_const_char__false__fields.push_back(StructTy_struct_std___Rb_tree_node_base);
StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_________Rb_tree_impl_std__less_const_char__false__fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType* StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_________Rb_tree_impl_std__less_const_char__false_ = StructType::get(mod->getContext(), StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_________Rb_tree_impl_std__less_const_char__false__fields, /*isPacked=*/false);
mod->addTypeName("struct.std::_Rb_tree<const char,std::pair<const char, j3::ClassPrimitive*>,std::_Select1st<std::pair<const char, j3::ClassPrimitive*> >,std::less<const char>,std::allocator<std::pair<const char, j3::ClassPrimitive*> > >::_Rb_tree_impl<std::less<const char>,false>", StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_________Rb_tree_impl_std__less_const_char__false_);

StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_______fields.push_back(StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_________Rb_tree_impl_std__less_const_char__false_);
StructType* StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive______ = StructType::get(mod->getContext(), StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_______fields, /*isPacked=*/false);
mod->addTypeName("struct.std::_Rb_tree<const char,std::pair<const char, j3::ClassPrimitive*>,std::_Select1st<std::pair<const char, j3::ClassPrimitive*> >,std::less<const char>,std::allocator<std::pair<const char, j3::ClassPrimitive*> > >", StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive______);

StructTy_struct_std__map_const_char_j3__ClassPrimitive__std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_______fields.push_back(StructTy_struct_std___Rb_tree_const_char_std__pair_const_char__j3__ClassPrimitive___std___Select1st_std__pair_const_char__j3__ClassPrimitive_____std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive______);
StructType* StructTy_struct_std__map_const_char_j3__ClassPrimitive__std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive______ = StructType::get(mod->getContext(), StructTy_struct_std__map_const_char_j3__ClassPrimitive__std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive_______fields, /*isPacked=*/false);
mod->addTypeName("struct.std::map<const char,j3::ClassPrimitive*,std::less<const char>,std::allocator<std::pair<const char, j3::ClassPrimitive*> > >", StructTy_struct_std__map_const_char_j3__ClassPrimitive__std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive______);

StructTy_struct_mvm__FunctionMap_fields.push_back(StructTy_struct_std__map_const_char_j3__ClassPrimitive__std__less_const_char__std__allocator_std__pair_const_char__j3__ClassPrimitive______);
StructTy_struct_mvm__FunctionMap_fields.push_back(StructTy_struct_mvm__SpinLock);
StructType* StructTy_struct_mvm__FunctionMap = StructType::get(mod->getContext(), StructTy_struct_mvm__FunctionMap_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::FunctionMap", StructTy_struct_mvm__FunctionMap);

StructTy_struct_mvm__VirtualMachine_fields.push_back(StructTy_struct_mvm__FunctionMap);
StructType* StructTy_struct_mvm__VirtualMachine = StructType::get(mod->getContext(), StructTy_struct_mvm__VirtualMachine_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::VirtualMachine", StructTy_struct_mvm__VirtualMachine);

PointerType* PointerTy_9 = PointerType::get(StructTy_struct_mvm__VirtualMachine, 0);

StructTy_struct_mvm__Thread_fields.push_back(PointerTy_9);
StructTy_struct_mvm__Thread_fields.push_back(PointerTy_0);
StructTy_struct_mvm__Thread_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_struct_mvm__Thread_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_struct_mvm__Thread_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_struct_mvm__Thread_fields.push_back(PointerTy_0);
StructTy_struct_mvm__Thread_fields.push_back(PointerTy_0);
std::vector<const Type*>FuncTy_17_args;
FuncTy_17_args.push_back(PointerTy_13);
FunctionType* FuncTy_17 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_17_args,
 /*isVarArg=*/false);

PointerType* PointerTy_16 = PointerType::get(FuncTy_17, 0);

StructTy_struct_mvm__Thread_fields.push_back(PointerTy_16);
std::vector<const Type*>StructTy_struct_mvm__KnownFrame_fields;
StructTy_struct_mvm__KnownFrame_fields.push_back(PointerTy_0);
StructTy_struct_mvm__KnownFrame_fields.push_back(PointerTy_0);
PATypeHolder PointerTy_18_fwd = OpaqueType::get(mod->getContext());
StructTy_struct_mvm__KnownFrame_fields.push_back(PointerTy_18_fwd);
StructType* StructTy_struct_mvm__KnownFrame = StructType::get(mod->getContext(), StructTy_struct_mvm__KnownFrame_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::KnownFrame", StructTy_struct_mvm__KnownFrame);

PointerType* PointerTy_18 = PointerType::get(StructTy_struct_mvm__KnownFrame, 0);
cast<OpaqueType>(PointerTy_18_fwd.get())->refineAbstractTypeTo(PointerTy_18);
PointerTy_18 = cast<PointerType>(PointerTy_18_fwd.get());


StructTy_struct_mvm__Thread_fields.push_back(PointerTy_18);
std::vector<const Type*>StructTy_struct_mvm__ExceptionBuffer_fields;
PATypeHolder PointerTy_19_fwd = OpaqueType::get(mod->getContext());
StructTy_struct_mvm__ExceptionBuffer_fields.push_back(PointerTy_19_fwd);
std::vector<const Type*>StructTy_struct___jmp_buf_tag_fields;
ArrayType* ArrayTy_21 = ArrayType::get(IntegerType::get(mod->getContext(), 32), 6);

StructTy_struct___jmp_buf_tag_fields.push_back(ArrayTy_21);
StructTy_struct___jmp_buf_tag_fields.push_back(IntegerType::get(mod->getContext(), 32));
std::vector<const Type*>StructTy_struct___sigset_t_fields;
ArrayType* ArrayTy_22 = ArrayType::get(IntegerType::get(mod->getContext(), 32), 32);

StructTy_struct___sigset_t_fields.push_back(ArrayTy_22);
StructType* StructTy_struct___sigset_t = StructType::get(mod->getContext(), StructTy_struct___sigset_t_fields, /*isPacked=*/false);
mod->addTypeName("struct.__sigset_t", StructTy_struct___sigset_t);

StructTy_struct___jmp_buf_tag_fields.push_back(StructTy_struct___sigset_t);
StructType* StructTy_struct___jmp_buf_tag = StructType::get(mod->getContext(), StructTy_struct___jmp_buf_tag_fields, /*isPacked=*/false);
mod->addTypeName("struct.__jmp_buf_tag", StructTy_struct___jmp_buf_tag);

ArrayType* ArrayTy_20 = ArrayType::get(StructTy_struct___jmp_buf_tag, 1);

StructTy_struct_mvm__ExceptionBuffer_fields.push_back(ArrayTy_20);
StructType* StructTy_struct_mvm__ExceptionBuffer = StructType::get(mod->getContext(), StructTy_struct_mvm__ExceptionBuffer_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::ExceptionBuffer", StructTy_struct_mvm__ExceptionBuffer);

PointerType* PointerTy_19 = PointerType::get(StructTy_struct_mvm__ExceptionBuffer, 0);
cast<OpaqueType>(PointerTy_19_fwd.get())->refineAbstractTypeTo(PointerTy_19);
PointerTy_19 = cast<PointerType>(PointerTy_19_fwd.get());


StructTy_struct_mvm__Thread_fields.push_back(PointerTy_19);
StructType* StructTy_struct_mvm__Thread = StructType::get(mod->getContext(), StructTy_struct_mvm__Thread_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::Thread", StructTy_struct_mvm__Thread);
cast<OpaqueType>(StructTy_struct_mvm__Thread_fwd.get())->refineAbstractTypeTo(StructTy_struct_mvm__Thread);
StructTy_struct_mvm__Thread = cast<StructType>(StructTy_struct_mvm__Thread_fwd.get());


StructTy_struct_mvm__MutatorThread_fields.push_back(StructTy_struct_mvm__Thread);
std::vector<const Type*>StructTy_struct_mvm__ThreadAllocator_fields;
StructTy_struct_mvm__ThreadAllocator_fields.push_back(StructTy_struct_llvm__BumpPtrAllocator);
StructType* StructTy_struct_mvm__ThreadAllocator = StructType::get(mod->getContext(), StructTy_struct_mvm__ThreadAllocator_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::ThreadAllocator", StructTy_struct_mvm__ThreadAllocator);

StructTy_struct_mvm__MutatorThread_fields.push_back(StructTy_struct_mvm__ThreadAllocator);
StructTy_struct_mvm__MutatorThread_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_mvm__MutatorThread_fields.push_back(PointerTy_16);
StructType* StructTy_struct_mvm__MutatorThread = StructType::get(mod->getContext(), StructTy_struct_mvm__MutatorThread_fields, /*isPacked=*/false);
mod->addTypeName("struct.mvm::MutatorThread", StructTy_struct_mvm__MutatorThread);

PointerType* PointerTy_4 = PointerType::get(StructTy_struct_mvm__MutatorThread, 0);

PointerType* PointerTy_23 = PointerType::get(IntegerType::get(mod->getContext(), 32), 0);

std::vector<const Type*>StructTy_struct_j3__JavaObject_fields;
std::vector<const Type*>StructTy_struct_gc_fields;
std::vector<const Type*>StructTy_struct_gcRoot_fields;
StructTy_struct_gcRoot_fields.push_back(PointerTy_5);
StructTy_struct_gcRoot_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType* StructTy_struct_gcRoot = StructType::get(mod->getContext(), StructTy_struct_gcRoot_fields, /*isPacked=*/false);
mod->addTypeName("struct.gcRoot", StructTy_struct_gcRoot);

StructTy_struct_gc_fields.push_back(StructTy_struct_gcRoot);
StructType* StructTy_struct_gc = StructType::get(mod->getContext(), StructTy_struct_gc_fields, /*isPacked=*/false);
mod->addTypeName("struct.gc", StructTy_struct_gc);

StructTy_struct_j3__JavaObject_fields.push_back(StructTy_struct_gc);
StructType* StructTy_struct_j3__JavaObject = StructType::get(mod->getContext(), StructTy_struct_j3__JavaObject_fields, /*isPacked=*/false);
mod->addTypeName("struct.j3::JavaObject", StructTy_struct_j3__JavaObject);

PointerType* PointerTy_24 = PointerType::get(StructTy_struct_j3__JavaObject, 0);

std::vector<const Type*>StructTy_JavaObject_fields;
ArrayType* ArrayTy_VT = ArrayType::get(PointerTy_6, 0);
mod->addTypeName("VT", ArrayTy_VT);

PointerType* PointerTy_27 = PointerType::get(ArrayTy_VT, 0);

StructTy_JavaObject_fields.push_back(PointerTy_27);
StructTy_JavaObject_fields.push_back(PointerTy_0);
StructType* StructTy_JavaObject = StructType::get(mod->getContext(), StructTy_JavaObject_fields, /*isPacked=*/false);
mod->addTypeName("JavaObject", StructTy_JavaObject);

PointerType* PointerTy_26 = PointerType::get(StructTy_JavaObject, 0);

PointerType* PointerTy_25 = PointerType::get(PointerTy_26, 0);

PointerType* PointerTy_28 = PointerType::get(PointerTy_0, 0);

std::vector<const Type*>FuncTy_30_args;
FuncTy_30_args.push_back(PointerTy_26);
FuncTy_30_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_30_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_30_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_30 = FunctionType::get(
 /*Result=*/PointerTy_26,
 /*Params=*/FuncTy_30_args,
 /*isVarArg=*/false);

PointerType* PointerTy_29 = PointerType::get(FuncTy_30, 0);

PointerType* PointerTy_31 = PointerType::get(PointerTy_27, 0);

std::vector<const Type*>FuncTy_33_args;
FuncTy_33_args.push_back(PointerTy_26);
FuncTy_33_args.push_back(PointerTy_26);
FuncTy_33_args.push_back(PointerTy_26);
FuncTy_33_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_33_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_33 = FunctionType::get(
 /*Result=*/PointerTy_26,
 /*Params=*/FuncTy_33_args,
 /*isVarArg=*/false);

PointerType* PointerTy_32 = PointerType::get(FuncTy_33, 0);

std::vector<const Type*>StructTy_35_fields;
std::vector<const Type*>StructTy_36_fields;
std::vector<const Type*>StructTy_37_fields;
StructTy_37_fields.push_back(StructTy_JavaObject);
StructTy_37_fields.push_back(PointerTy_26);
StructTy_37_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_37_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_37_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_37_fields.push_back(PointerTy_26);
StructTy_37_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_37_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_37_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_37_fields.push_back(PointerTy_26);
StructTy_37_fields.push_back(PointerTy_26);
StructTy_37_fields.push_back(PointerTy_26);
StructTy_37_fields.push_back(PointerTy_26);
StructTy_37_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructType* StructTy_37 = StructType::get(mod->getContext(), StructTy_37_fields, /*isPacked=*/false);

StructTy_36_fields.push_back(StructTy_37);
StructType* StructTy_36 = StructType::get(mod->getContext(), StructTy_36_fields, /*isPacked=*/false);

StructTy_35_fields.push_back(StructTy_36);
StructTy_35_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_35_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_35_fields.push_back(PointerTy_26);
StructType* StructTy_35 = StructType::get(mod->getContext(), StructTy_35_fields, /*isPacked=*/false);

PointerType* PointerTy_34 = PointerType::get(StructTy_35, 0);

std::vector<const Type*>StructTy_39_fields;
std::vector<const Type*>StructTy_40_fields;
StructTy_40_fields.push_back(StructTy_37);
StructTy_40_fields.push_back(PointerTy_26);
StructTy_40_fields.push_back(PointerTy_26);
StructTy_40_fields.push_back(PointerTy_26);
StructTy_40_fields.push_back(PointerTy_26);
StructTy_40_fields.push_back(PointerTy_26);
StructTy_40_fields.push_back(PointerTy_26);
StructTy_40_fields.push_back(PointerTy_26);
StructType* StructTy_40 = StructType::get(mod->getContext(), StructTy_40_fields, /*isPacked=*/false);

StructTy_39_fields.push_back(StructTy_40);
StructTy_39_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_39_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_39_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_39_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructType* StructTy_39 = StructType::get(mod->getContext(), StructTy_39_fields, /*isPacked=*/false);

PointerType* PointerTy_38 = PointerType::get(StructTy_39, 0);

std::vector<const Type*>StructTy_42_fields;
StructTy_42_fields.push_back(StructTy_37);
StructTy_42_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructType* StructTy_42 = StructType::get(mod->getContext(), StructTy_42_fields, /*isPacked=*/false);

PointerType* PointerTy_41 = PointerType::get(StructTy_42, 0);

std::vector<const Type*>FuncTy_44_args;
FunctionType* FuncTy_44 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_44_args,
 /*isVarArg=*/false);

PointerType* PointerTy_43 = PointerType::get(FuncTy_44, 0);

std::vector<const Type*>StructTy_46_fields;
StructTy_46_fields.push_back(PointerTy_26);
StructTy_46_fields.push_back(PointerTy_26);
StructTy_46_fields.push_back(PointerTy_26);
StructTy_46_fields.push_back(PointerTy_26);
StructType* StructTy_46 = StructType::get(mod->getContext(), StructTy_46_fields, /*isPacked=*/false);

PointerType* PointerTy_45 = PointerType::get(StructTy_46, 0);

std::vector<const Type*>FuncTy_48_args;
FuncTy_48_args.push_back(IntegerType::get(mod->getContext(), 1));
FuncTy_48_args.push_back(IntegerType::get(mod->getContext(), 1));
FuncTy_48_args.push_back(IntegerType::get(mod->getContext(), 1));
FuncTy_48_args.push_back(IntegerType::get(mod->getContext(), 1));
FuncTy_48_args.push_back(IntegerType::get(mod->getContext(), 1));
FunctionType* FuncTy_48 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_48_args,
 /*isVarArg=*/false);

PointerType* PointerTy_47 = PointerType::get(FuncTy_48, 0);

std::vector<const Type*>FuncTy_50_args;
FuncTy_50_args.push_back(PointerTy_23);
FuncTy_50_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_50_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_50 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_50_args,
 /*isVarArg=*/false);

PointerType* PointerTy_49 = PointerType::get(FuncTy_50, 0);


// Function Declarations

Function* func_llvm_frameaddress = Function::Create(
 /*Type=*/FuncTy_3,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"llvm.frameaddress", mod); // (external, no body)
func_llvm_frameaddress->setCallingConv(CallingConv::C);
AttrListPtr func_llvm_frameaddress_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind | Attribute::ReadNone;
 Attrs.push_back(PAWI);
 func_llvm_frameaddress_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_llvm_frameaddress->setAttributes(func_llvm_frameaddress_PAL);

Function* func_JnJVM_org_mmtk_utility_alloc_Allocator_allocSlow__III = Function::Create(
 /*Type=*/FuncTy_30,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"JnJVM_org_mmtk_utility_alloc_Allocator_allocSlow__III", mod); 
func_JnJVM_org_mmtk_utility_alloc_Allocator_allocSlow__III->setCallingConv(CallingConv::C);
func_JnJVM_org_mmtk_utility_alloc_Allocator_allocSlow__III->setGC("vmkit");
AttrListPtr func_JnJVM_org_mmtk_utility_alloc_Allocator_allocSlow__III_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoInline;
 Attrs.push_back(PAWI);
 func_JnJVM_org_mmtk_utility_alloc_Allocator_allocSlow__III_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_JnJVM_org_mmtk_utility_alloc_Allocator_allocSlow__III->setAttributes(func_JnJVM_org_mmtk_utility_alloc_Allocator_allocSlow__III_PAL);

Function* func_JnJVM_org_mmtk_utility_alloc_BumpPointer_allocSlow__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2II = Function::Create(
 /*Type=*/FuncTy_33,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"JnJVM_org_mmtk_utility_alloc_BumpPointer_allocSlow__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2II", mod); 
func_JnJVM_org_mmtk_utility_alloc_BumpPointer_allocSlow__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2II->setCallingConv(CallingConv::C);
func_JnJVM_org_mmtk_utility_alloc_BumpPointer_allocSlow__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2II->setGC("vmkit");
AttrListPtr func_JnJVM_org_mmtk_utility_alloc_BumpPointer_allocSlow__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2II_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoInline;
 Attrs.push_back(PAWI);
 func_JnJVM_org_mmtk_utility_alloc_BumpPointer_allocSlow__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2II_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_JnJVM_org_mmtk_utility_alloc_BumpPointer_allocSlow__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2II->setAttributes(func_JnJVM_org_mmtk_utility_alloc_BumpPointer_allocSlow__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2II_PAL);

Function* func_JnJVM_org_mmtk_utility_alloc_LargeObjectAllocator_alloc__III = Function::Create(
 /*Type=*/FuncTy_30,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"JnJVM_org_mmtk_utility_alloc_LargeObjectAllocator_alloc__III", mod); 
func_JnJVM_org_mmtk_utility_alloc_LargeObjectAllocator_alloc__III->setCallingConv(CallingConv::C);
func_JnJVM_org_mmtk_utility_alloc_LargeObjectAllocator_alloc__III->setGC("vmkit");
AttrListPtr func_JnJVM_org_mmtk_utility_alloc_LargeObjectAllocator_alloc__III_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoInline;
 Attrs.push_back(PAWI);
 func_JnJVM_org_mmtk_utility_alloc_LargeObjectAllocator_alloc__III_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_JnJVM_org_mmtk_utility_alloc_LargeObjectAllocator_alloc__III->setAttributes(func_JnJVM_org_mmtk_utility_alloc_LargeObjectAllocator_alloc__III_PAL);

Function* func_abort = Function::Create(
 /*Type=*/FuncTy_44,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"abort", mod); // (external, no body)
func_abort->setCallingConv(CallingConv::C);
AttrListPtr func_abort_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoReturn | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 func_abort_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_abort->setAttributes(func_abort_PAL);

Function* func_llvm_memory_barrier = Function::Create(
 /*Type=*/FuncTy_48,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"llvm.memory.barrier", mod); // (external, no body)
func_llvm_memory_barrier->setCallingConv(CallingConv::C);
AttrListPtr func_llvm_memory_barrier_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 func_llvm_memory_barrier_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_llvm_memory_barrier->setAttributes(func_llvm_memory_barrier_PAL);

Function* func_llvm_atomic_cmp_swap_i32_p0i32 = Function::Create(
 /*Type=*/FuncTy_50,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"llvm.atomic.cmp.swap.i32.p0i32", mod); // (external, no body)
func_llvm_atomic_cmp_swap_i32_p0i32->setCallingConv(CallingConv::C);
AttrListPtr func_llvm_atomic_cmp_swap_i32_p0i32_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 1U; PAWI.Attrs = 0  | Attribute::NoCapture;
 Attrs.push_back(PAWI);
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 func_llvm_atomic_cmp_swap_i32_p0i32_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_llvm_atomic_cmp_swap_i32_p0i32->setAttributes(func_llvm_atomic_cmp_swap_i32_p0i32_PAL);

Function* func__ZN3mvm6Thread5yieldEv = Function::Create(
 /*Type=*/FuncTy_44,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3mvm6Thread5yieldEv", mod); // (external, no body)
func__ZN3mvm6Thread5yieldEv->setCallingConv(CallingConv::C);
AttrListPtr func__ZN3mvm6Thread5yieldEv_PAL;
func__ZN3mvm6Thread5yieldEv->setAttributes(func__ZN3mvm6Thread5yieldEv_PAL);

// Global Variable Declarations

GlobalVariable* gvar_struct_finalObject32 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_35,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"finalObject32");

GlobalVariable* gvar_struct_finalObject101 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_35,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"finalObject101");

GlobalVariable* gvar_struct_finalObject122 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_39,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"finalObject122");

GlobalVariable* gvar_struct_finalObject67 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_39,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"finalObject67");

GlobalVariable* gvar_struct_finalObject2 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_42,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"finalObject2");

GlobalVariable* gvar_struct_finalObject85 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_39,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"finalObject85");

GlobalVariable* gvar_struct_org_mmtk_utility_DoublyLinkedList_static = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_46,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"org_mmtk_utility_DoublyLinkedList_static");

// Constant Definitions
ConstantInt* const_int32_51 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("3"), 10));
ConstantInt* const_int32_52 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("-4"), 10));
ConstantInt* const_int32_53 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("0"), 10));
ConstantInt* const_int32_54 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("2146435072"), 10));
ConstantInt* const_int32_55 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("2"), 10));
ConstantInt* const_int32_56 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("8193"), 10));
ConstantInt* const_int32_57 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("4"), 10));
ConstantInt* const_int32_58 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("7"), 10));
ConstantInt* const_int32_59 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("8"), 10));
ConstantInt* const_int32_60 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("-1"), 10));
ConstantInt* const_int32_61 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("63"), 10));
ConstantInt* const_int32_62 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("127"), 10));
ConstantInt* const_int32_63 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("255"), 10));
ConstantInt* const_int32_64 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("511"), 10));
ConstantInt* const_int32_65 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("2047"), 10));
ConstantInt* const_int32_66 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("10"), 10));
ConstantInt* const_int32_67 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("32"), 10));
ConstantInt* const_int32_68 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("12"), 10));
ConstantInt* const_int32_69 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("5"), 10));
ConstantInt* const_int32_70 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("16"), 10));
ConstantInt* const_int32_71 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("6"), 10));
ConstantInt* const_int32_72 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("20"), 10));
ConstantInt* const_int32_73 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("26"), 10));
ConstantInt* const_int32_74 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("1"), 10));
ConstantPointerNull* const_ptr_75 = ConstantPointerNull::get(PointerTy_27);
ConstantInt* const_int8_76 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("-4"), 10));
std::vector<Constant*> const_ptr_77_indices;
const_ptr_77_indices.push_back(const_int32_53);
const_ptr_77_indices.push_back(const_int32_74);
Constant* const_ptr_77 = ConstantExpr::getGetElementPtr(gvar_struct_finalObject32, &const_ptr_77_indices[0], const_ptr_77_indices.size());
ConstantInt* const_int8_78 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("2"), 10));
std::vector<Constant*> const_ptr_79_indices;
const_ptr_79_indices.push_back(const_int32_53);
const_ptr_79_indices.push_back(const_int32_51);
Constant* const_ptr_79 = ConstantExpr::getGetElementPtr(gvar_struct_finalObject32, &const_ptr_79_indices[0], const_ptr_79_indices.size());
ConstantInt* const_int32_80 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("-32"), 10));
ConstantPointerNull* const_ptr_81 = ConstantPointerNull::get(PointerTy_0);
std::vector<Constant*> const_ptr_82_indices;
const_ptr_82_indices.push_back(const_int32_53);
const_ptr_82_indices.push_back(const_int32_74);
Constant* const_ptr_82 = ConstantExpr::getGetElementPtr(gvar_struct_finalObject101, &const_ptr_82_indices[0], const_ptr_82_indices.size());
std::vector<Constant*> const_ptr_83_indices;
const_ptr_83_indices.push_back(const_int32_53);
const_ptr_83_indices.push_back(const_int32_51);
Constant* const_ptr_83 = ConstantExpr::getGetElementPtr(gvar_struct_finalObject101, &const_ptr_83_indices[0], const_ptr_83_indices.size());
std::vector<Constant*> const_ptr_84_indices;
const_ptr_84_indices.push_back(const_int32_53);
const_ptr_84_indices.push_back(const_int32_55);
Constant* const_ptr_84 = ConstantExpr::getGetElementPtr(gvar_struct_finalObject122, &const_ptr_84_indices[0], const_ptr_84_indices.size());
std::vector<Constant*> const_ptr_85_indices;
const_ptr_85_indices.push_back(const_int32_53);
const_ptr_85_indices.push_back(const_int32_55);
Constant* const_ptr_85 = ConstantExpr::getGetElementPtr(gvar_struct_finalObject67, &const_ptr_85_indices[0], const_ptr_85_indices.size());
ConstantInt* const_int8_86 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("1"), 10));
std::vector<Constant*> const_ptr_87_indices;
const_ptr_87_indices.push_back(const_int32_53);
const_ptr_87_indices.push_back(const_int32_74);
Constant* const_ptr_87 = ConstantExpr::getGetElementPtr(gvar_struct_finalObject2, &const_ptr_87_indices[0], const_ptr_87_indices.size());
std::vector<Constant*> const_ptr_88_indices;
const_ptr_88_indices.push_back(const_int32_53);
const_ptr_88_indices.push_back(const_int32_55);
Constant* const_ptr_88 = ConstantExpr::getGetElementPtr(gvar_struct_finalObject85, &const_ptr_88_indices[0], const_ptr_88_indices.size());
std::vector<Constant*> const_ptr_89_indices;
const_ptr_89_indices.push_back(const_int32_53);
const_ptr_89_indices.push_back(const_int32_55);
Constant* const_ptr_89 = ConstantExpr::getGetElementPtr(gvar_struct_org_mmtk_utility_DoublyLinkedList_static, &const_ptr_89_indices[0], const_ptr_89_indices.size());
ConstantPointerNull* const_ptr_90 = ConstantPointerNull::get(PointerTy_26);
ConstantInt* const_int32_91 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("1000"), 10));
ConstantInt* const_int1_92 = ConstantInt::get(mod->getContext(), APInt(1, StringRef("-1"), 10));

// Global Variable Definitions

Function* func_gcmalloc = Function::Create(
 /*Type=*/FuncTy_1,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"gcmalloc", mod); 
func_gcmalloc->setCallingConv(CallingConv::C);
func_gcmalloc->setGC("vmkit");
AttrListPtr func_gcmalloc_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 func_gcmalloc_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
func_gcmalloc->setAttributes(func_gcmalloc_PAL);
Function::arg_iterator args = func_gcmalloc->arg_begin();
Value* int32_sz = args++;
int32_sz->setName("sz");
Value* ptr_VT = args++;
ptr_VT->setName("VT");

BasicBlock* label_entry = BasicBlock::Create(mod->getContext(), "entry",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II.exit.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_4_i_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*4.i.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_6_i_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*6.i.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_7_i_i1_i_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*7.i.i1.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_8_i_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*8.i.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_9_i_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*9.i.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT16_i_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT16.i.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT17_i_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT17.i.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT18_i_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT18.i.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT19_i_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT19.i.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT20_i_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT20.i.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I.exit.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF__i_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IFNE_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IFNE.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II.exit.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_utility_alloc_Allocator_fillAlignmentGap__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2_exit_i_i_i_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_utility_alloc_Allocator_fillAlignmentGap__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2.exit.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IFEQ_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IFEQ.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread19.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i5_i_i_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II.exit.i5.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_4_i_i_i6_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*4.i.i.i6.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_6_i_i_i7_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*6.i.i.i7.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_7_i_i1_i8_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*7.i.i1.i8.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_8_i_i_i9_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*8.i.i.i9.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_9_i_i_i10_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*9.i.i.i10.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT16_i_i_i11_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT16.i.i.i11.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT17_i_i_i12_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT17.i.i.i12.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT18_i_i_i13_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT18.i.i.i13.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT19_i_i_i14_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT19.i.i.i14.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT20_i_i_i15_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT20.i.i.i15.i.i.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I.exit.i16.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF__i17_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*.i17.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IFNE_i21_i_i_i = BasicBlock::Create(mod->getContext(), "false IFNE.i21.i.i.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread21.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II.exit.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_4_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*4.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_6_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*6.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_7_i_i1_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*7.i.i1.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_8_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*8.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_9_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*9.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT16_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT16.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT17_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT17.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT18_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT18.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT19_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT19.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IF_ICMPGT20_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IF_ICMPGT20.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I.exit.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF__i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*.i.i.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III_exit_i_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III.exit.i.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread9.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread13.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread17.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_i = BasicBlock::Create(mod->getContext(), "JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.i",func_gcmalloc,0);
BasicBlock* label_true_IF_NULL_i1_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "true IF*NULL.i1.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_1_i3_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*1.i3.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_true_IFNULL_i5_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "true IFNULL.i5.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_bb_i_i20_i = BasicBlock::Create(mod->getContext(), "bb.i.i20.i",func_gcmalloc,0);
BasicBlock* label_bb1_i_i21_i = BasicBlock::Create(mod->getContext(), "bb1.i.i21.i",func_gcmalloc,0);
BasicBlock* label_bb2_i_i22_i = BasicBlock::Create(mod->getContext(), "bb2.i.i22.i",func_gcmalloc,0);
BasicBlock* label_bb4_preheader_i_i23_i = BasicBlock::Create(mod->getContext(), "bb4.preheader.i.i23.i",func_gcmalloc,0);
BasicBlock* label_bb3_i_i24_i = BasicBlock::Create(mod->getContext(), "bb3.i.i24.i",func_gcmalloc,0);
BasicBlock* label_false_IFNE_i7_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "false IFNE.i7.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_true_IFNULL3_i8_i_i_i_i_i = BasicBlock::Create(mod->getContext(), "true IFNULL3.i8.i.i.i.i.i",func_gcmalloc,0);
BasicBlock* label_true_IF_NULL_i1_i_i6_i_i_i = BasicBlock::Create(mod->getContext(), "true IF*NULL.i1.i.i6.i.i.i",func_gcmalloc,0);
BasicBlock* label_GOTO_or_IF_1_i3_i_i8_i_i_i = BasicBlock::Create(mod->getContext(), "GOTO or IF*1.i3.i.i8.i.i.i",func_gcmalloc,0);
BasicBlock* label_true_IFNULL_i5_i_i9_i_i_i = BasicBlock::Create(mod->getContext(), "true IFNULL.i5.i.i9.i.i.i",func_gcmalloc,0);
BasicBlock* label_bb_i_i_i = BasicBlock::Create(mod->getContext(), "bb.i.i.i",func_gcmalloc,0);
BasicBlock* label_bb1_i_i_i = BasicBlock::Create(mod->getContext(), "bb1.i.i.i",func_gcmalloc,0);
BasicBlock* label_bb2_i_i_i = BasicBlock::Create(mod->getContext(), "bb2.i.i.i",func_gcmalloc,0);
BasicBlock* label_bb4_preheader_i_i_i = BasicBlock::Create(mod->getContext(), "bb4.preheader.i.i.i",func_gcmalloc,0);
BasicBlock* label_bb3_i_i_i = BasicBlock::Create(mod->getContext(), "bb3.i.i.i",func_gcmalloc,0);
BasicBlock* label_false_IFNE_i7_i_i11_i_i_i = BasicBlock::Create(mod->getContext(), "false IFNE.i7.i.i11.i.i.i",func_gcmalloc,0);
BasicBlock* label_true_IFNULL3_i8_i_i12_i_i_i = BasicBlock::Create(mod->getContext(), "true IFNULL3.i8.i.i12.i.i.i",func_gcmalloc,0);
BasicBlock* label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit = BasicBlock::Create(mod->getContext(), "JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2.exit",func_gcmalloc,0);

// Block entry (label_entry)
BinaryOperator* int32_93 = BinaryOperator::Create(Instruction::Add, int32_sz, const_int32_51, "", label_entry);
BinaryOperator* int32_94 = BinaryOperator::Create(Instruction::And, int32_93, const_int32_52, "", label_entry);
CallInst* ptr_95 = CallInst::Create(func_llvm_frameaddress, const_int32_53, "", label_entry);
ptr_95->setCallingConv(CallingConv::C);
ptr_95->setTailCall(true);
AttrListPtr ptr_95_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 ptr_95_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
ptr_95->setAttributes(ptr_95_PAL);

CastInst* int32_96 = new PtrToIntInst(ptr_95, IntegerType::get(mod->getContext(), 32), "", label_entry);
BinaryOperator* int32_97 = BinaryOperator::Create(Instruction::And, int32_96, const_int32_54, "", label_entry);
CastInst* ptr_98 = new IntToPtrInst(int32_97, PointerTy_4, "", label_entry);
std::vector<Value*> ptr_99_indices;
ptr_99_indices.push_back(const_int32_53);
ptr_99_indices.push_back(const_int32_55);
Instruction* ptr_99 = GetElementPtrInst::Create(ptr_98, ptr_99_indices.begin(), ptr_99_indices.end(), "", label_entry);
LoadInst* int32_100 = new LoadInst(ptr_99, "", false, label_entry);
CastInst* ptr_101 = new IntToPtrInst(int32_100, PointerTy_24, "", label_entry);
ICmpInst* int1_102 = new ICmpInst(*label_entry, ICmpInst::ICMP_SLT, int32_94, const_int32_56, "");
SelectInst* int32_storemerge_i_i = SelectInst::Create(int1_102, const_int32_53, const_int32_57, "storemerge.i.i", label_entry);
SwitchInst* void_103 = SwitchInst::Create(int32_storemerge_i_i, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_i, 7, label_entry);
void_103->addCase(const_int32_53, label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i);
void_103->addCase(const_int32_55, label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i_i);
void_103->addCase(const_int32_51, label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
void_103->addCase(const_int32_57, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
void_103->addCase(const_int32_58, label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i5_i_i_i);
void_103->addCase(const_int32_59, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);


// Block JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II.exit.i.i.i.i (label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i_i)
GetElementPtrInst* ptr_104 = GetElementPtrInst::Create(ptr_101, const_int32_57, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i_i);
CastInst* ptr_105 = new BitCastInst(ptr_104, PointerTy_25, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i_i);
LoadInst* ptr_106 = new LoadInst(ptr_105, "", false, label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i_i);
BinaryOperator* int32_107 = BinaryOperator::Create(Instruction::Add, int32_94, const_int32_60, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i_i);
ICmpInst* int1_108 = new ICmpInst(*label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i_i, ICmpInst::ICMP_SGT, int32_107, const_int32_61, "");
BranchInst::Create(label_GOTO_or_IF_4_i_i_i_i_i_i, label_false_IF_ICMPGT16_i_i_i_i_i_i, int1_108, label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i_i);

// Block GOTO or IF*4.i.i.i.i.i.i (label_GOTO_or_IF_4_i_i_i_i_i_i)
ICmpInst* int1_110 = new ICmpInst(*label_GOTO_or_IF_4_i_i_i_i_i_i, ICmpInst::ICMP_SGT, int32_107, const_int32_62, "");
BranchInst::Create(label_GOTO_or_IF_6_i_i_i_i_i_i, label_false_IF_ICMPGT17_i_i_i_i_i_i, int1_110, label_GOTO_or_IF_4_i_i_i_i_i_i);

// Block GOTO or IF*6.i.i.i.i.i.i (label_GOTO_or_IF_6_i_i_i_i_i_i)
ICmpInst* int1_112 = new ICmpInst(*label_GOTO_or_IF_6_i_i_i_i_i_i, ICmpInst::ICMP_SGT, int32_107, const_int32_63, "");
BranchInst::Create(label_GOTO_or_IF_7_i_i1_i_i_i_i, label_false_IF_ICMPGT18_i_i_i_i_i_i, int1_112, label_GOTO_or_IF_6_i_i_i_i_i_i);

// Block GOTO or IF*7.i.i1.i.i.i.i (label_GOTO_or_IF_7_i_i1_i_i_i_i)
ICmpInst* int1_114 = new ICmpInst(*label_GOTO_or_IF_7_i_i1_i_i_i_i, ICmpInst::ICMP_SGT, int32_107, const_int32_64, "");
BranchInst::Create(label_GOTO_or_IF_8_i_i_i_i_i_i, label_false_IF_ICMPGT19_i_i_i_i_i_i, int1_114, label_GOTO_or_IF_7_i_i1_i_i_i_i);

// Block GOTO or IF*8.i.i.i.i.i.i (label_GOTO_or_IF_8_i_i_i_i_i_i)
ICmpInst* int1_116 = new ICmpInst(*label_GOTO_or_IF_8_i_i_i_i_i_i, ICmpInst::ICMP_SGT, int32_107, const_int32_65, "");
BranchInst::Create(label_GOTO_or_IF_9_i_i_i_i_i_i, label_false_IF_ICMPGT20_i_i_i_i_i_i, int1_116, label_GOTO_or_IF_8_i_i_i_i_i_i);

// Block GOTO or IF*9.i.i.i.i.i.i (label_GOTO_or_IF_9_i_i_i_i_i_i)
BinaryOperator* int32_118 = BinaryOperator::Create(Instruction::AShr, int32_107, const_int32_66, "", label_GOTO_or_IF_9_i_i_i_i_i_i);
BinaryOperator* int32_119 = BinaryOperator::Create(Instruction::Add, int32_118, const_int32_67, "", label_GOTO_or_IF_9_i_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i, label_GOTO_or_IF_9_i_i_i_i_i_i);

// Block false IF_ICMPGT16.i.i.i.i.i.i (label_false_IF_ICMPGT16_i_i_i_i_i_i)
BinaryOperator* int32_121 = BinaryOperator::Create(Instruction::AShr, int32_107, const_int32_55, "", label_false_IF_ICMPGT16_i_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i, label_false_IF_ICMPGT16_i_i_i_i_i_i);

// Block false IF_ICMPGT17.i.i.i.i.i.i (label_false_IF_ICMPGT17_i_i_i_i_i_i)
BinaryOperator* int32_123 = BinaryOperator::Create(Instruction::AShr, int32_107, const_int32_57, "", label_false_IF_ICMPGT17_i_i_i_i_i_i);
BinaryOperator* int32_124 = BinaryOperator::Create(Instruction::Add, int32_123, const_int32_68, "", label_false_IF_ICMPGT17_i_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i, label_false_IF_ICMPGT17_i_i_i_i_i_i);

// Block false IF_ICMPGT18.i.i.i.i.i.i (label_false_IF_ICMPGT18_i_i_i_i_i_i)
BinaryOperator* int32_126 = BinaryOperator::Create(Instruction::AShr, int32_107, const_int32_69, "", label_false_IF_ICMPGT18_i_i_i_i_i_i);
BinaryOperator* int32_127 = BinaryOperator::Create(Instruction::Add, int32_126, const_int32_70, "", label_false_IF_ICMPGT18_i_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i, label_false_IF_ICMPGT18_i_i_i_i_i_i);

// Block false IF_ICMPGT19.i.i.i.i.i.i (label_false_IF_ICMPGT19_i_i_i_i_i_i)
BinaryOperator* int32_129 = BinaryOperator::Create(Instruction::AShr, int32_107, const_int32_71, "", label_false_IF_ICMPGT19_i_i_i_i_i_i);
BinaryOperator* int32_130 = BinaryOperator::Create(Instruction::Add, int32_129, const_int32_72, "", label_false_IF_ICMPGT19_i_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i, label_false_IF_ICMPGT19_i_i_i_i_i_i);

// Block false IF_ICMPGT20.i.i.i.i.i.i (label_false_IF_ICMPGT20_i_i_i_i_i_i)
BinaryOperator* int32_132 = BinaryOperator::Create(Instruction::AShr, int32_107, const_int32_59, "", label_false_IF_ICMPGT20_i_i_i_i_i_i);
BinaryOperator* int32_133 = BinaryOperator::Create(Instruction::Add, int32_132, const_int32_73, "", label_false_IF_ICMPGT20_i_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i, label_false_IF_ICMPGT20_i_i_i_i_i_i);

// Block JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I.exit.i.i.i.i (label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i)
PHINode* int32_135 = PHINode::Create(IntegerType::get(mod->getContext(), 32), "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i);
int32_135->reserveOperandSpace(6);
int32_135->addIncoming(int32_121, label_false_IF_ICMPGT16_i_i_i_i_i_i);
int32_135->addIncoming(int32_124, label_false_IF_ICMPGT17_i_i_i_i_i_i);
int32_135->addIncoming(int32_127, label_false_IF_ICMPGT18_i_i_i_i_i_i);
int32_135->addIncoming(int32_130, label_false_IF_ICMPGT19_i_i_i_i_i_i);
int32_135->addIncoming(int32_133, label_false_IF_ICMPGT20_i_i_i_i_i_i);
int32_135->addIncoming(int32_119, label_GOTO_or_IF_9_i_i_i_i_i_i);

std::vector<Value*> ptr_136_indices;
ptr_136_indices.push_back(const_int32_74);
ptr_136_indices.push_back(const_int32_74);
Instruction* ptr_136 = GetElementPtrInst::Create(ptr_106, ptr_136_indices.begin(), ptr_136_indices.end(), "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i);
LoadInst* ptr_137 = new LoadInst(ptr_136, "", false, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i);
BinaryOperator* int32_138 = BinaryOperator::Create(Instruction::Add, int32_135, const_int32_74, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i);
CastInst* ptr_139 = new BitCastInst(ptr_137, PointerTy_23, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i);
GetElementPtrInst* ptr_140 = GetElementPtrInst::Create(ptr_139, int32_138, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i);
LoadInst* int32_141 = new LoadInst(ptr_140, "", false, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i);
CastInst* ptr_142 = new IntToPtrInst(int32_141, PointerTy_26, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i);
ICmpInst* int1_143 = new ICmpInst(*label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i, ICmpInst::ICMP_EQ, int32_141, const_int32_53, "");
BranchInst::Create(label_GOTO_or_IF__i_i_i_i, label_false_IFNE_i_i_i_i, int1_143, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i_i);

// Block GOTO or IF*.i.i.i.i (label_GOTO_or_IF__i_i_i_i)
std::vector<Value*> ptr_145_params;
ptr_145_params.push_back(ptr_106);
ptr_145_params.push_back(int32_94);
ptr_145_params.push_back(const_int32_53);
ptr_145_params.push_back(const_int32_53);
CallInst* ptr_145 = CallInst::Create(func_JnJVM_org_mmtk_utility_alloc_Allocator_allocSlow__III, ptr_145_params.begin(), ptr_145_params.end(), "", label_GOTO_or_IF__i_i_i_i);
ptr_145->setCallingConv(CallingConv::C);
ptr_145->setTailCall(true);
AttrListPtr ptr_145_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 ptr_145_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
ptr_145->setAttributes(ptr_145_PAL);

BranchInst::Create(label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i, label_GOTO_or_IF__i_i_i_i);

// Block false IFNE.i.i.i.i (label_false_IFNE_i_i_i_i)
CastInst* ptr_147 = new IntToPtrInst(int32_141, PointerTy_25, "", label_false_IFNE_i_i_i_i);
LoadInst* ptr_148 = new LoadInst(ptr_147, "", false, label_false_IFNE_i_i_i_i);
CastInst* int32_149 = new PtrToIntInst(ptr_148, IntegerType::get(mod->getContext(), 32), "", label_false_IFNE_i_i_i_i);
 new StoreInst(int32_149, ptr_140, false, label_false_IFNE_i_i_i_i);
std::vector<Value*> ptr_151_indices;
ptr_151_indices.push_back(const_int32_53);
ptr_151_indices.push_back(const_int32_53);
Instruction* ptr_151 = GetElementPtrInst::Create(ptr_142, ptr_151_indices.begin(), ptr_151_indices.end(), "", label_false_IFNE_i_i_i_i);
 new StoreInst(const_ptr_75, ptr_151, false, label_false_IFNE_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i, label_false_IFNE_i_i_i_i);

// Block JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II.exit.i.i.i.i (label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i)
GetElementPtrInst* ptr_154 = GetElementPtrInst::Create(ptr_101, const_int32_55, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
CastInst* ptr_155 = new BitCastInst(ptr_154, PointerTy_25, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
LoadInst* ptr_156 = new LoadInst(ptr_155, "", false, label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
GetElementPtrInst* ptr_157 = GetElementPtrInst::Create(ptr_156, const_int32_74, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
CastInst* ptr_158 = new BitCastInst(ptr_157, PointerTy_25, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
LoadInst* ptr_159 = new LoadInst(ptr_158, "", false, label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
CastInst* int32_160 = new PtrToIntInst(ptr_159, IntegerType::get(mod->getContext(), 32), "", label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
BinaryOperator* int32_161 = BinaryOperator::Create(Instruction::Add, int32_160, int32_94, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
CastInst* ptr_162 = new IntToPtrInst(int32_161, PointerTy_26, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
std::vector<Value*> ptr_163_indices;
ptr_163_indices.push_back(const_int32_74);
ptr_163_indices.push_back(const_int32_74);
Instruction* ptr_163 = GetElementPtrInst::Create(ptr_156, ptr_163_indices.begin(), ptr_163_indices.end(), "", label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
LoadInst* ptr_164 = new LoadInst(ptr_163, "", false, label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
CastInst* ptr_165 = new BitCastInst(ptr_164, PointerTy_26, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);
ICmpInst* int1_166 = new ICmpInst(*label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i, ICmpInst::ICMP_UGT, ptr_162, ptr_165, "");
BranchInst::Create(label_false_IFEQ_i_i_i_i, label_JnJVM_org_mmtk_utility_alloc_Allocator_fillAlignmentGap__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2_exit_i_i_i_i, int1_166, label_JnJVM_org_mmtk_utility_alloc_Allocator_alignAllocationNoFill__Lorg_vmmagic_unboxed_Address_2II_exit_i_i_i_i);

// Block JnJVM_org_mmtk_utility_alloc_Allocator_fillAlignmentGap__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2.exit.i.i.i.i (label_JnJVM_org_mmtk_utility_alloc_Allocator_fillAlignmentGap__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2_exit_i_i_i_i)
std::vector<Value*> ptr_168_indices;
ptr_168_indices.push_back(const_int32_74);
ptr_168_indices.push_back(const_int32_53);
Instruction* ptr_168 = GetElementPtrInst::Create(ptr_156, ptr_168_indices.begin(), ptr_168_indices.end(), "", label_JnJVM_org_mmtk_utility_alloc_Allocator_fillAlignmentGap__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2_exit_i_i_i_i);
CastInst* ptr__c_i_i_i_i = new IntToPtrInst(int32_161, PointerTy_27, ".c.i.i.i.i", label_JnJVM_org_mmtk_utility_alloc_Allocator_fillAlignmentGap__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2_exit_i_i_i_i);
 new StoreInst(ptr__c_i_i_i_i, ptr_168, false, label_JnJVM_org_mmtk_utility_alloc_Allocator_fillAlignmentGap__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2_exit_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i, label_JnJVM_org_mmtk_utility_alloc_Allocator_fillAlignmentGap__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2_exit_i_i_i_i);

// Block false IFEQ.i.i.i.i (label_false_IFEQ_i_i_i_i)
std::vector<Value*> ptr_171_params;
ptr_171_params.push_back(ptr_156);
ptr_171_params.push_back(ptr_159);
ptr_171_params.push_back(ptr_162);
ptr_171_params.push_back(const_int32_53);
ptr_171_params.push_back(const_int32_53);
CallInst* ptr_171 = CallInst::Create(func_JnJVM_org_mmtk_utility_alloc_BumpPointer_allocSlow__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2II, ptr_171_params.begin(), ptr_171_params.end(), "", label_false_IFEQ_i_i_i_i);
ptr_171->setCallingConv(CallingConv::C);
ptr_171->setTailCall(true);
AttrListPtr ptr_171_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 ptr_171_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
ptr_171->setAttributes(ptr_171_PAL);

BranchInst::Create(label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i, label_false_IFEQ_i_i_i_i);

// Block JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread19.i (label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i)
std::vector<Value*> ptr_173_indices;
ptr_173_indices.push_back(const_int32_55);
ptr_173_indices.push_back(const_int32_53);
ptr_173_indices.push_back(const_int32_53);
ptr_173_indices.push_back(const_int32_74);
Instruction* ptr_173 = GetElementPtrInst::Create(ptr_101, ptr_173_indices.begin(), ptr_173_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
CastInst* ptr_174 = new BitCastInst(ptr_173, PointerTy_28, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
LoadInst* ptr_175 = new LoadInst(ptr_174, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
CastInst* ptr_176 = new BitCastInst(ptr_175, PointerTy_26, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
std::vector<Value*> ptr_177_params;
ptr_177_params.push_back(ptr_176);
ptr_177_params.push_back(int32_94);
ptr_177_params.push_back(const_int32_53);
ptr_177_params.push_back(const_int32_53);
CallInst* ptr_177 = CallInst::Create(func_JnJVM_org_mmtk_utility_alloc_LargeObjectAllocator_alloc__III, ptr_177_params.begin(), ptr_177_params.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
ptr_177->setCallingConv(CallingConv::C);
ptr_177->setTailCall(true);
AttrListPtr ptr_177_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 ptr_177_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
ptr_177->setAttributes(ptr_177_PAL);

std::vector<Value*> ptr_178_indices;
ptr_178_indices.push_back(const_int32_53);
ptr_178_indices.push_back(const_int32_53);
Instruction* ptr_178 = GetElementPtrInst::Create(ptr_177, ptr_178_indices.begin(), ptr_178_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
CastInst* ptr__c20_i = new BitCastInst(ptr_VT, PointerTy_27, ".c20.i", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
 new StoreInst(ptr__c20_i, ptr_178, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
std::vector<Value*> ptr_180_indices;
ptr_180_indices.push_back(const_int32_53);
ptr_180_indices.push_back(const_int32_74);
Instruction* ptr_180 = GetElementPtrInst::Create(ptr_177, ptr_180_indices.begin(), ptr_180_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
CastInst* ptr_181 = new BitCastInst(ptr_180, PointerTy_0, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
LoadInst* int8_182 = new LoadInst(ptr_181, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
BinaryOperator* int8_183 = BinaryOperator::Create(Instruction::And, int8_182, const_int8_76, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
LoadInst* int8_184 = new LoadInst(const_ptr_77, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
BinaryOperator* int8_185 = BinaryOperator::Create(Instruction::Or, int8_183, int8_184, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
BinaryOperator* int8_186 = BinaryOperator::Create(Instruction::Or, int8_185, const_int8_78, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
 new StoreInst(int8_186, ptr_181, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
LoadInst* ptr_188 = new LoadInst(const_ptr_79, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
CastInst* int32_189 = new PtrToIntInst(ptr_177, IntegerType::get(mod->getContext(), 32), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
BinaryOperator* int32_190 = BinaryOperator::Create(Instruction::And, int32_189, const_int32_80, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
CastInst* ptr_191 = new IntToPtrInst(int32_190, PointerTy_26, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
std::vector<Value*> ptr_192_indices;
ptr_192_indices.push_back(const_int32_55);
ptr_192_indices.push_back(const_int32_74);
Instruction* ptr_192 = GetElementPtrInst::Create(ptr_188, ptr_192_indices.begin(), ptr_192_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
LoadInst* ptr_193 = new LoadInst(ptr_192, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
GetElementPtrInst* ptr_194 = GetElementPtrInst::Create(ptr_193, const_int32_68, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
CastInst* ptr_195 = new BitCastInst(ptr_194, PointerTy_28, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
LoadInst* ptr_196 = new LoadInst(ptr_195, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);
ICmpInst* int1_197 = new ICmpInst(*label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i, ICmpInst::ICMP_EQ, ptr_196, const_ptr_81, "");
BranchInst::Create(label_true_IF_NULL_i1_i_i_i_i_i, label_true_IFNULL_i5_i_i_i_i_i, int1_197, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread19_i);

// Block JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II.exit.i5.i.i.i (label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i5_i_i_i)
GetElementPtrInst* ptr_199 = GetElementPtrInst::Create(ptr_101, const_int32_51, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i5_i_i_i);
CastInst* ptr_200 = new BitCastInst(ptr_199, PointerTy_25, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i5_i_i_i);
LoadInst* ptr_201 = new LoadInst(ptr_200, "", false, label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i5_i_i_i);
BinaryOperator* int32_202 = BinaryOperator::Create(Instruction::Add, int32_94, const_int32_60, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i5_i_i_i);
ICmpInst* int1_203 = new ICmpInst(*label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i5_i_i_i, ICmpInst::ICMP_SGT, int32_202, const_int32_61, "");
BranchInst::Create(label_GOTO_or_IF_4_i_i_i6_i_i_i, label_false_IF_ICMPGT16_i_i_i11_i_i_i, int1_203, label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i5_i_i_i);

// Block GOTO or IF*4.i.i.i6.i.i.i (label_GOTO_or_IF_4_i_i_i6_i_i_i)
ICmpInst* int1_205 = new ICmpInst(*label_GOTO_or_IF_4_i_i_i6_i_i_i, ICmpInst::ICMP_SGT, int32_202, const_int32_62, "");
BranchInst::Create(label_GOTO_or_IF_6_i_i_i7_i_i_i, label_false_IF_ICMPGT17_i_i_i12_i_i_i, int1_205, label_GOTO_or_IF_4_i_i_i6_i_i_i);

// Block GOTO or IF*6.i.i.i7.i.i.i (label_GOTO_or_IF_6_i_i_i7_i_i_i)
ICmpInst* int1_207 = new ICmpInst(*label_GOTO_or_IF_6_i_i_i7_i_i_i, ICmpInst::ICMP_SGT, int32_202, const_int32_63, "");
BranchInst::Create(label_GOTO_or_IF_7_i_i1_i8_i_i_i, label_false_IF_ICMPGT18_i_i_i13_i_i_i, int1_207, label_GOTO_or_IF_6_i_i_i7_i_i_i);

// Block GOTO or IF*7.i.i1.i8.i.i.i (label_GOTO_or_IF_7_i_i1_i8_i_i_i)
ICmpInst* int1_209 = new ICmpInst(*label_GOTO_or_IF_7_i_i1_i8_i_i_i, ICmpInst::ICMP_SGT, int32_202, const_int32_64, "");
BranchInst::Create(label_GOTO_or_IF_8_i_i_i9_i_i_i, label_false_IF_ICMPGT19_i_i_i14_i_i_i, int1_209, label_GOTO_or_IF_7_i_i1_i8_i_i_i);

// Block GOTO or IF*8.i.i.i9.i.i.i (label_GOTO_or_IF_8_i_i_i9_i_i_i)
ICmpInst* int1_211 = new ICmpInst(*label_GOTO_or_IF_8_i_i_i9_i_i_i, ICmpInst::ICMP_SGT, int32_202, const_int32_65, "");
BranchInst::Create(label_GOTO_or_IF_9_i_i_i10_i_i_i, label_false_IF_ICMPGT20_i_i_i15_i_i_i, int1_211, label_GOTO_or_IF_8_i_i_i9_i_i_i);

// Block GOTO or IF*9.i.i.i10.i.i.i (label_GOTO_or_IF_9_i_i_i10_i_i_i)
BinaryOperator* int32_213 = BinaryOperator::Create(Instruction::AShr, int32_202, const_int32_66, "", label_GOTO_or_IF_9_i_i_i10_i_i_i);
BinaryOperator* int32_214 = BinaryOperator::Create(Instruction::Add, int32_213, const_int32_67, "", label_GOTO_or_IF_9_i_i_i10_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i, label_GOTO_or_IF_9_i_i_i10_i_i_i);

// Block false IF_ICMPGT16.i.i.i11.i.i.i (label_false_IF_ICMPGT16_i_i_i11_i_i_i)
BinaryOperator* int32_216 = BinaryOperator::Create(Instruction::AShr, int32_202, const_int32_55, "", label_false_IF_ICMPGT16_i_i_i11_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i, label_false_IF_ICMPGT16_i_i_i11_i_i_i);

// Block false IF_ICMPGT17.i.i.i12.i.i.i (label_false_IF_ICMPGT17_i_i_i12_i_i_i)
BinaryOperator* int32_218 = BinaryOperator::Create(Instruction::AShr, int32_202, const_int32_57, "", label_false_IF_ICMPGT17_i_i_i12_i_i_i);
BinaryOperator* int32_219 = BinaryOperator::Create(Instruction::Add, int32_218, const_int32_68, "", label_false_IF_ICMPGT17_i_i_i12_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i, label_false_IF_ICMPGT17_i_i_i12_i_i_i);

// Block false IF_ICMPGT18.i.i.i13.i.i.i (label_false_IF_ICMPGT18_i_i_i13_i_i_i)
BinaryOperator* int32_221 = BinaryOperator::Create(Instruction::AShr, int32_202, const_int32_69, "", label_false_IF_ICMPGT18_i_i_i13_i_i_i);
BinaryOperator* int32_222 = BinaryOperator::Create(Instruction::Add, int32_221, const_int32_70, "", label_false_IF_ICMPGT18_i_i_i13_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i, label_false_IF_ICMPGT18_i_i_i13_i_i_i);

// Block false IF_ICMPGT19.i.i.i14.i.i.i (label_false_IF_ICMPGT19_i_i_i14_i_i_i)
BinaryOperator* int32_224 = BinaryOperator::Create(Instruction::AShr, int32_202, const_int32_71, "", label_false_IF_ICMPGT19_i_i_i14_i_i_i);
BinaryOperator* int32_225 = BinaryOperator::Create(Instruction::Add, int32_224, const_int32_72, "", label_false_IF_ICMPGT19_i_i_i14_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i, label_false_IF_ICMPGT19_i_i_i14_i_i_i);

// Block false IF_ICMPGT20.i.i.i15.i.i.i (label_false_IF_ICMPGT20_i_i_i15_i_i_i)
BinaryOperator* int32_227 = BinaryOperator::Create(Instruction::AShr, int32_202, const_int32_59, "", label_false_IF_ICMPGT20_i_i_i15_i_i_i);
BinaryOperator* int32_228 = BinaryOperator::Create(Instruction::Add, int32_227, const_int32_73, "", label_false_IF_ICMPGT20_i_i_i15_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i, label_false_IF_ICMPGT20_i_i_i15_i_i_i);

// Block JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I.exit.i16.i.i.i (label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i)
PHINode* int32_230 = PHINode::Create(IntegerType::get(mod->getContext(), 32), "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i);
int32_230->reserveOperandSpace(6);
int32_230->addIncoming(int32_216, label_false_IF_ICMPGT16_i_i_i11_i_i_i);
int32_230->addIncoming(int32_219, label_false_IF_ICMPGT17_i_i_i12_i_i_i);
int32_230->addIncoming(int32_222, label_false_IF_ICMPGT18_i_i_i13_i_i_i);
int32_230->addIncoming(int32_225, label_false_IF_ICMPGT19_i_i_i14_i_i_i);
int32_230->addIncoming(int32_228, label_false_IF_ICMPGT20_i_i_i15_i_i_i);
int32_230->addIncoming(int32_214, label_GOTO_or_IF_9_i_i_i10_i_i_i);

std::vector<Value*> ptr_231_indices;
ptr_231_indices.push_back(const_int32_74);
ptr_231_indices.push_back(const_int32_74);
Instruction* ptr_231 = GetElementPtrInst::Create(ptr_201, ptr_231_indices.begin(), ptr_231_indices.end(), "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i);
LoadInst* ptr_232 = new LoadInst(ptr_231, "", false, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i);
BinaryOperator* int32_233 = BinaryOperator::Create(Instruction::Add, int32_230, const_int32_74, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i);
CastInst* ptr_234 = new BitCastInst(ptr_232, PointerTy_23, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i);
GetElementPtrInst* ptr_235 = GetElementPtrInst::Create(ptr_234, int32_233, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i);
LoadInst* int32_236 = new LoadInst(ptr_235, "", false, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i);
CastInst* ptr_237 = new IntToPtrInst(int32_236, PointerTy_26, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i);
ICmpInst* int1_238 = new ICmpInst(*label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i, ICmpInst::ICMP_EQ, int32_236, const_int32_53, "");
BranchInst::Create(label_GOTO_or_IF__i17_i_i_i, label_false_IFNE_i21_i_i_i, int1_238, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i16_i_i_i);

// Block GOTO or IF*.i17.i.i.i (label_GOTO_or_IF__i17_i_i_i)
std::vector<Value*> ptr_240_params;
ptr_240_params.push_back(ptr_201);
ptr_240_params.push_back(int32_94);
ptr_240_params.push_back(const_int32_53);
ptr_240_params.push_back(const_int32_53);
CallInst* ptr_240 = CallInst::Create(func_JnJVM_org_mmtk_utility_alloc_Allocator_allocSlow__III, ptr_240_params.begin(), ptr_240_params.end(), "", label_GOTO_or_IF__i17_i_i_i);
ptr_240->setCallingConv(CallingConv::C);
ptr_240->setTailCall(true);
AttrListPtr ptr_240_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 ptr_240_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
ptr_240->setAttributes(ptr_240_PAL);

BranchInst::Create(label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i, label_GOTO_or_IF__i17_i_i_i);

// Block false IFNE.i21.i.i.i (label_false_IFNE_i21_i_i_i)
CastInst* ptr_242 = new IntToPtrInst(int32_236, PointerTy_25, "", label_false_IFNE_i21_i_i_i);
LoadInst* ptr_243 = new LoadInst(ptr_242, "", false, label_false_IFNE_i21_i_i_i);
CastInst* int32_244 = new PtrToIntInst(ptr_243, IntegerType::get(mod->getContext(), 32), "", label_false_IFNE_i21_i_i_i);
 new StoreInst(int32_244, ptr_235, false, label_false_IFNE_i21_i_i_i);
std::vector<Value*> ptr_246_indices;
ptr_246_indices.push_back(const_int32_53);
ptr_246_indices.push_back(const_int32_53);
Instruction* ptr_246 = GetElementPtrInst::Create(ptr_237, ptr_246_indices.begin(), ptr_246_indices.end(), "", label_false_IFNE_i21_i_i_i);
 new StoreInst(const_ptr_75, ptr_246, false, label_false_IFNE_i21_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i, label_false_IFNE_i21_i_i_i);

// Block JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread21.i (label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i)
std::vector<Value*> ptr_249_indices;
ptr_249_indices.push_back(const_int32_51);
ptr_249_indices.push_back(const_int32_53);
ptr_249_indices.push_back(const_int32_53);
ptr_249_indices.push_back(const_int32_74);
Instruction* ptr_249 = GetElementPtrInst::Create(ptr_101, ptr_249_indices.begin(), ptr_249_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
CastInst* ptr_250 = new BitCastInst(ptr_249, PointerTy_28, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
LoadInst* ptr_251 = new LoadInst(ptr_250, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
CastInst* ptr_252 = new BitCastInst(ptr_251, PointerTy_26, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
std::vector<Value*> ptr_253_params;
ptr_253_params.push_back(ptr_252);
ptr_253_params.push_back(int32_94);
ptr_253_params.push_back(const_int32_53);
ptr_253_params.push_back(const_int32_53);
CallInst* ptr_253 = CallInst::Create(func_JnJVM_org_mmtk_utility_alloc_LargeObjectAllocator_alloc__III, ptr_253_params.begin(), ptr_253_params.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
ptr_253->setCallingConv(CallingConv::C);
ptr_253->setTailCall(true);
AttrListPtr ptr_253_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 ptr_253_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
ptr_253->setAttributes(ptr_253_PAL);

std::vector<Value*> ptr_254_indices;
ptr_254_indices.push_back(const_int32_53);
ptr_254_indices.push_back(const_int32_53);
Instruction* ptr_254 = GetElementPtrInst::Create(ptr_253, ptr_254_indices.begin(), ptr_254_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
CastInst* ptr__c22_i = new BitCastInst(ptr_VT, PointerTy_27, ".c22.i", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
 new StoreInst(ptr__c22_i, ptr_254, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
std::vector<Value*> ptr_256_indices;
ptr_256_indices.push_back(const_int32_53);
ptr_256_indices.push_back(const_int32_74);
Instruction* ptr_256 = GetElementPtrInst::Create(ptr_253, ptr_256_indices.begin(), ptr_256_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
CastInst* ptr_257 = new BitCastInst(ptr_256, PointerTy_0, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
LoadInst* int8_258 = new LoadInst(ptr_257, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
BinaryOperator* int8_259 = BinaryOperator::Create(Instruction::And, int8_258, const_int8_76, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
LoadInst* int8_260 = new LoadInst(const_ptr_82, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
BinaryOperator* int8_261 = BinaryOperator::Create(Instruction::Or, int8_259, int8_260, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
BinaryOperator* int8_262 = BinaryOperator::Create(Instruction::Or, int8_261, const_int8_78, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
 new StoreInst(int8_262, ptr_257, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
LoadInst* ptr_264 = new LoadInst(const_ptr_83, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
CastInst* int32_265 = new PtrToIntInst(ptr_253, IntegerType::get(mod->getContext(), 32), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
BinaryOperator* int32_266 = BinaryOperator::Create(Instruction::And, int32_265, const_int32_80, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
CastInst* ptr_267 = new IntToPtrInst(int32_266, PointerTy_26, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
std::vector<Value*> ptr_268_indices;
ptr_268_indices.push_back(const_int32_55);
ptr_268_indices.push_back(const_int32_74);
Instruction* ptr_268 = GetElementPtrInst::Create(ptr_264, ptr_268_indices.begin(), ptr_268_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
LoadInst* ptr_269 = new LoadInst(ptr_268, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
GetElementPtrInst* ptr_270 = GetElementPtrInst::Create(ptr_269, const_int32_68, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
CastInst* ptr_271 = new BitCastInst(ptr_270, PointerTy_28, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
LoadInst* ptr_272 = new LoadInst(ptr_271, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);
ICmpInst* int1_273 = new ICmpInst(*label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i, ICmpInst::ICMP_EQ, ptr_272, const_ptr_81, "");
BranchInst::Create(label_true_IF_NULL_i1_i_i6_i_i_i, label_true_IFNULL_i5_i_i9_i_i_i, int1_273, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread21_i);

// Block JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II.exit.i.i.i (label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i)
std::vector<Value*> ptr_275_indices;
ptr_275_indices.push_back(const_int32_57);
ptr_275_indices.push_back(const_int32_53);
ptr_275_indices.push_back(const_int32_53);
ptr_275_indices.push_back(const_int32_74);
Instruction* ptr_275 = GetElementPtrInst::Create(ptr_101, ptr_275_indices.begin(), ptr_275_indices.end(), "", label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i);
CastInst* ptr_276 = new BitCastInst(ptr_275, PointerTy_28, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i);
LoadInst* ptr_277 = new LoadInst(ptr_276, "", false, label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i);
CastInst* ptr_278 = new BitCastInst(ptr_277, PointerTy_26, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i);
BinaryOperator* int32_279 = BinaryOperator::Create(Instruction::Add, int32_94, const_int32_60, "", label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i);
ICmpInst* int1_280 = new ICmpInst(*label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i, ICmpInst::ICMP_SGT, int32_279, const_int32_61, "");
BranchInst::Create(label_GOTO_or_IF_4_i_i_i_i_i, label_false_IF_ICMPGT16_i_i_i_i_i, int1_280, label_JnJVM_org_mmtk_utility_alloc_Allocator_getMaximumAlignedSize__II_exit_i_i_i);

// Block GOTO or IF*4.i.i.i.i.i (label_GOTO_or_IF_4_i_i_i_i_i)
ICmpInst* int1_282 = new ICmpInst(*label_GOTO_or_IF_4_i_i_i_i_i, ICmpInst::ICMP_SGT, int32_279, const_int32_62, "");
BranchInst::Create(label_GOTO_or_IF_6_i_i_i_i_i, label_false_IF_ICMPGT17_i_i_i_i_i, int1_282, label_GOTO_or_IF_4_i_i_i_i_i);

// Block GOTO or IF*6.i.i.i.i.i (label_GOTO_or_IF_6_i_i_i_i_i)
ICmpInst* int1_284 = new ICmpInst(*label_GOTO_or_IF_6_i_i_i_i_i, ICmpInst::ICMP_SGT, int32_279, const_int32_63, "");
BranchInst::Create(label_GOTO_or_IF_7_i_i1_i_i_i, label_false_IF_ICMPGT18_i_i_i_i_i, int1_284, label_GOTO_or_IF_6_i_i_i_i_i);

// Block GOTO or IF*7.i.i1.i.i.i (label_GOTO_or_IF_7_i_i1_i_i_i)
ICmpInst* int1_286 = new ICmpInst(*label_GOTO_or_IF_7_i_i1_i_i_i, ICmpInst::ICMP_SGT, int32_279, const_int32_64, "");
BranchInst::Create(label_GOTO_or_IF_8_i_i_i_i_i, label_false_IF_ICMPGT19_i_i_i_i_i, int1_286, label_GOTO_or_IF_7_i_i1_i_i_i);

// Block GOTO or IF*8.i.i.i.i.i (label_GOTO_or_IF_8_i_i_i_i_i)
ICmpInst* int1_288 = new ICmpInst(*label_GOTO_or_IF_8_i_i_i_i_i, ICmpInst::ICMP_SGT, int32_279, const_int32_65, "");
BranchInst::Create(label_GOTO_or_IF_9_i_i_i_i_i, label_false_IF_ICMPGT20_i_i_i_i_i, int1_288, label_GOTO_or_IF_8_i_i_i_i_i);

// Block GOTO or IF*9.i.i.i.i.i (label_GOTO_or_IF_9_i_i_i_i_i)
BinaryOperator* int32_290 = BinaryOperator::Create(Instruction::AShr, int32_279, const_int32_66, "", label_GOTO_or_IF_9_i_i_i_i_i);
BinaryOperator* int32_291 = BinaryOperator::Create(Instruction::Add, int32_290, const_int32_67, "", label_GOTO_or_IF_9_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i, label_GOTO_or_IF_9_i_i_i_i_i);

// Block false IF_ICMPGT16.i.i.i.i.i (label_false_IF_ICMPGT16_i_i_i_i_i)
BinaryOperator* int32_293 = BinaryOperator::Create(Instruction::AShr, int32_279, const_int32_55, "", label_false_IF_ICMPGT16_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i, label_false_IF_ICMPGT16_i_i_i_i_i);

// Block false IF_ICMPGT17.i.i.i.i.i (label_false_IF_ICMPGT17_i_i_i_i_i)
BinaryOperator* int32_295 = BinaryOperator::Create(Instruction::AShr, int32_279, const_int32_57, "", label_false_IF_ICMPGT17_i_i_i_i_i);
BinaryOperator* int32_296 = BinaryOperator::Create(Instruction::Add, int32_295, const_int32_68, "", label_false_IF_ICMPGT17_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i, label_false_IF_ICMPGT17_i_i_i_i_i);

// Block false IF_ICMPGT18.i.i.i.i.i (label_false_IF_ICMPGT18_i_i_i_i_i)
BinaryOperator* int32_298 = BinaryOperator::Create(Instruction::AShr, int32_279, const_int32_69, "", label_false_IF_ICMPGT18_i_i_i_i_i);
BinaryOperator* int32_299 = BinaryOperator::Create(Instruction::Add, int32_298, const_int32_70, "", label_false_IF_ICMPGT18_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i, label_false_IF_ICMPGT18_i_i_i_i_i);

// Block false IF_ICMPGT19.i.i.i.i.i (label_false_IF_ICMPGT19_i_i_i_i_i)
BinaryOperator* int32_301 = BinaryOperator::Create(Instruction::AShr, int32_279, const_int32_71, "", label_false_IF_ICMPGT19_i_i_i_i_i);
BinaryOperator* int32_302 = BinaryOperator::Create(Instruction::Add, int32_301, const_int32_72, "", label_false_IF_ICMPGT19_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i, label_false_IF_ICMPGT19_i_i_i_i_i);

// Block false IF_ICMPGT20.i.i.i.i.i (label_false_IF_ICMPGT20_i_i_i_i_i)
BinaryOperator* int32_304 = BinaryOperator::Create(Instruction::AShr, int32_279, const_int32_59, "", label_false_IF_ICMPGT20_i_i_i_i_i);
BinaryOperator* int32_305 = BinaryOperator::Create(Instruction::Add, int32_304, const_int32_73, "", label_false_IF_ICMPGT20_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i, label_false_IF_ICMPGT20_i_i_i_i_i);

// Block JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I.exit.i.i.i (label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i)
PHINode* int32_307 = PHINode::Create(IntegerType::get(mod->getContext(), 32), "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i);
int32_307->reserveOperandSpace(6);
int32_307->addIncoming(int32_293, label_false_IF_ICMPGT16_i_i_i_i_i);
int32_307->addIncoming(int32_296, label_false_IF_ICMPGT17_i_i_i_i_i);
int32_307->addIncoming(int32_299, label_false_IF_ICMPGT18_i_i_i_i_i);
int32_307->addIncoming(int32_302, label_false_IF_ICMPGT19_i_i_i_i_i);
int32_307->addIncoming(int32_305, label_false_IF_ICMPGT20_i_i_i_i_i);
int32_307->addIncoming(int32_291, label_GOTO_or_IF_9_i_i_i_i_i);

GetElementPtrInst* ptr_308 = GetElementPtrInst::Create(ptr_277, const_int32_68, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i);
CastInst* ptr_309 = new BitCastInst(ptr_308, PointerTy_28, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i);
LoadInst* ptr_310 = new LoadInst(ptr_309, "", false, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i);
BinaryOperator* int32_311 = BinaryOperator::Create(Instruction::Add, int32_307, const_int32_74, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i);
CastInst* ptr_312 = new BitCastInst(ptr_310, PointerTy_23, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i);
GetElementPtrInst* ptr_313 = GetElementPtrInst::Create(ptr_312, int32_311, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i);
LoadInst* int32_314 = new LoadInst(ptr_313, "", false, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i);
CastInst* ptr_315 = new IntToPtrInst(int32_314, PointerTy_26, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i);
ICmpInst* int1_316 = new ICmpInst(*label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i, ICmpInst::ICMP_EQ, int32_314, const_int32_53, "");
BranchInst::Create(label_GOTO_or_IF__i_i_i, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III_exit_i_i, int1_316, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_getSizeClass__I_exit_i_i_i);

// Block GOTO or IF*.i.i.i (label_GOTO_or_IF__i_i_i)
std::vector<Value*> ptr_318_params;
ptr_318_params.push_back(ptr_278);
ptr_318_params.push_back(int32_94);
ptr_318_params.push_back(const_int32_53);
ptr_318_params.push_back(const_int32_53);
CallInst* ptr_318 = CallInst::Create(func_JnJVM_org_mmtk_utility_alloc_Allocator_allocSlow__III, ptr_318_params.begin(), ptr_318_params.end(), "", label_GOTO_or_IF__i_i_i);
ptr_318->setCallingConv(CallingConv::C);
ptr_318->setTailCall(true);
AttrListPtr ptr_318_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 ptr_318_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
ptr_318->setAttributes(ptr_318_PAL);

BranchInst::Create(label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i, label_GOTO_or_IF__i_i_i);

// Block JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III.exit.i.i (label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III_exit_i_i)
CastInst* ptr_320 = new IntToPtrInst(int32_314, PointerTy_25, "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III_exit_i_i);
LoadInst* ptr_321 = new LoadInst(ptr_320, "", false, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III_exit_i_i);
CastInst* int32_322 = new PtrToIntInst(ptr_321, IntegerType::get(mod->getContext(), 32), "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III_exit_i_i);
 new StoreInst(int32_322, ptr_313, false, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III_exit_i_i);
std::vector<Value*> ptr_324_indices;
ptr_324_indices.push_back(const_int32_53);
ptr_324_indices.push_back(const_int32_53);
Instruction* ptr_324 = GetElementPtrInst::Create(ptr_315, ptr_324_indices.begin(), ptr_324_indices.end(), "", label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III_exit_i_i);
 new StoreInst(const_ptr_75, ptr_324, false, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III_exit_i_i);
BranchInst::Create(label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III_exit_i_i);

// Block JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread.i (label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i)
PHINode* ptr__ph_i = PHINode::Create(PointerTy_26, ".ph.i", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i);
ptr__ph_i->reserveOperandSpace(2);
ptr__ph_i->addIncoming(ptr_318, label_GOTO_or_IF__i_i_i);
ptr__ph_i->addIncoming(ptr_315, label_JnJVM_org_mmtk_utility_alloc_SegregatedFreeList_alloc__III_exit_i_i);

std::vector<Value*> ptr_327_indices;
ptr_327_indices.push_back(const_int32_53);
ptr_327_indices.push_back(const_int32_53);
Instruction* ptr_327 = GetElementPtrInst::Create(ptr__ph_i, ptr_327_indices.begin(), ptr_327_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i);
CastInst* ptr__c6_i = new BitCastInst(ptr_VT, PointerTy_27, ".c6.i", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i);
 new StoreInst(ptr__c6_i, ptr_327, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i);
LoadInst* int8_storemerge_in_i_i1_i_i = new LoadInst(const_ptr_84, "storemerge.in.i.i1.i.i", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i);
std::vector<Value*> ptr_329_indices;
ptr_329_indices.push_back(const_int32_53);
ptr_329_indices.push_back(const_int32_74);
Instruction* ptr_329 = GetElementPtrInst::Create(ptr__ph_i, ptr_329_indices.begin(), ptr_329_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i);
CastInst* ptr_330 = new BitCastInst(ptr_329, PointerTy_0, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i);
 new StoreInst(int8_storemerge_in_i_i1_i_i, ptr_330, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i);
BranchInst::Create(label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i);

// Block JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread9.i (label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i)
PHINode* ptr__ph8_i = PHINode::Create(PointerTy_26, ".ph8.i", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i);
ptr__ph8_i->reserveOperandSpace(2);
ptr__ph8_i->addIncoming(ptr_142, label_false_IFNE_i_i_i_i);
ptr__ph8_i->addIncoming(ptr_145, label_GOTO_or_IF__i_i_i_i);

std::vector<Value*> ptr_333_indices;
ptr_333_indices.push_back(const_int32_53);
ptr_333_indices.push_back(const_int32_53);
Instruction* ptr_333 = GetElementPtrInst::Create(ptr__ph8_i, ptr_333_indices.begin(), ptr_333_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i);
CastInst* ptr__c10_i = new BitCastInst(ptr_VT, PointerTy_27, ".c10.i", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i);
 new StoreInst(ptr__c10_i, ptr_333, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i);
LoadInst* int8_storemerge_in_i_i_i_i = new LoadInst(const_ptr_85, "storemerge.in.i.i.i.i", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i);
std::vector<Value*> ptr_335_indices;
ptr_335_indices.push_back(const_int32_53);
ptr_335_indices.push_back(const_int32_74);
Instruction* ptr_335 = GetElementPtrInst::Create(ptr__ph8_i, ptr_335_indices.begin(), ptr_335_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i);
CastInst* ptr_336 = new BitCastInst(ptr_335, PointerTy_0, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i);
 new StoreInst(int8_storemerge_in_i_i_i_i, ptr_336, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i);
BranchInst::Create(label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i);

// Block JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread13.i (label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i)
PHINode* ptr__ph12_i = PHINode::Create(PointerTy_26, ".ph12.i", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
ptr__ph12_i->reserveOperandSpace(2);
ptr__ph12_i->addIncoming(ptr_171, label_false_IFEQ_i_i_i_i);
ptr__ph12_i->addIncoming(ptr_159, label_JnJVM_org_mmtk_utility_alloc_Allocator_fillAlignmentGap__Lorg_vmmagic_unboxed_Address_2Lorg_vmmagic_unboxed_Address_2_exit_i_i_i_i);

std::vector<Value*> ptr_339_indices;
ptr_339_indices.push_back(const_int32_53);
ptr_339_indices.push_back(const_int32_53);
Instruction* ptr_339 = GetElementPtrInst::Create(ptr__ph12_i, ptr_339_indices.begin(), ptr_339_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
CastInst* ptr__c14_i = new BitCastInst(ptr_VT, PointerTy_27, ".c14.i", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
 new StoreInst(ptr__c14_i, ptr_339, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
std::vector<Value*> ptr_341_indices;
ptr_341_indices.push_back(const_int32_53);
ptr_341_indices.push_back(const_int32_74);
Instruction* ptr_341 = GetElementPtrInst::Create(ptr__ph12_i, ptr_341_indices.begin(), ptr_341_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
CastInst* ptr_342 = new BitCastInst(ptr_341, PointerTy_0, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
LoadInst* int8_343 = new LoadInst(ptr_342, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
BinaryOperator* int8_344 = BinaryOperator::Create(Instruction::And, int8_343, const_int8_86, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
LoadInst* int8_345 = new LoadInst(const_ptr_87, "", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
BinaryOperator* int8_346 = BinaryOperator::Create(Instruction::Or, int8_344, int8_345, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
 new StoreInst(int8_346, ptr_342, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
BranchInst::Create(label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);

// Block JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.thread17.i (label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i)
PHINode* ptr__ph16_i = PHINode::Create(PointerTy_26, ".ph16.i", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i);
ptr__ph16_i->reserveOperandSpace(2);
ptr__ph16_i->addIncoming(ptr_237, label_false_IFNE_i21_i_i_i);
ptr__ph16_i->addIncoming(ptr_240, label_GOTO_or_IF__i17_i_i_i);

std::vector<Value*> ptr_349_indices;
ptr_349_indices.push_back(const_int32_53);
ptr_349_indices.push_back(const_int32_53);
Instruction* ptr_349 = GetElementPtrInst::Create(ptr__ph16_i, ptr_349_indices.begin(), ptr_349_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i);
CastInst* ptr__c18_i = new BitCastInst(ptr_VT, PointerTy_27, ".c18.i", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i);
 new StoreInst(ptr__c18_i, ptr_349, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i);
LoadInst* int8_storemerge_in_i2_i_i_i = new LoadInst(const_ptr_88, "storemerge.in.i2.i.i.i", false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i);
std::vector<Value*> ptr_351_indices;
ptr_351_indices.push_back(const_int32_53);
ptr_351_indices.push_back(const_int32_74);
Instruction* ptr_351 = GetElementPtrInst::Create(ptr__ph16_i, ptr_351_indices.begin(), ptr_351_indices.end(), "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i);
CastInst* ptr_352 = new BitCastInst(ptr_351, PointerTy_0, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i);
 new StoreInst(int8_storemerge_in_i2_i_i_i, ptr_352, false, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i);
BranchInst::Create(label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i);

// Block JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII.exit.i (label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_i)
CallInst* void_355 = CallInst::Create(func_abort, "", label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_i);
void_355->setCallingConv(CallingConv::C);
void_355->setTailCall(true);
AttrListPtr void_355_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoReturn | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 void_355_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
void_355->setAttributes(void_355_PAL);

new UnreachableInst(mod->getContext(), label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_i);

// Block true IF*NULL.i1.i.i.i.i.i (label_true_IF_NULL_i1_i_i_i_i_i)
std::vector<Value*> ptr_357_indices;
ptr_357_indices.push_back(const_int32_53);
ptr_357_indices.push_back(const_int32_53);
Instruction* ptr_357 = GetElementPtrInst::Create(ptr_191, ptr_357_indices.begin(), ptr_357_indices.end(), "", label_true_IF_NULL_i1_i_i_i_i_i);
 new StoreInst(const_ptr_75, ptr_357, false, label_true_IF_NULL_i1_i_i_i_i_i);
GetElementPtrInst* ptr_359 = GetElementPtrInst::Create(ptr_193, const_int32_59, "", label_true_IF_NULL_i1_i_i_i_i_i);
CastInst* ptr_360 = new BitCastInst(ptr_359, PointerTy_25, "", label_true_IF_NULL_i1_i_i_i_i_i);
LoadInst* ptr_361 = new LoadInst(ptr_360, "", false, label_true_IF_NULL_i1_i_i_i_i_i);
LoadInst* ptr_362 = new LoadInst(const_ptr_89, "", false, label_true_IF_NULL_i1_i_i_i_i_i);
CastInst* int32_363 = new PtrToIntInst(ptr_362, IntegerType::get(mod->getContext(), 32), "", label_true_IF_NULL_i1_i_i_i_i_i);
BinaryOperator* int32_364 = BinaryOperator::Create(Instruction::Add, int32_363, int32_190, "", label_true_IF_NULL_i1_i_i_i_i_i);
CastInst* ptr_365 = new IntToPtrInst(int32_364, PointerTy_25, "", label_true_IF_NULL_i1_i_i_i_i_i);
 new StoreInst(ptr_361, ptr_365, false, label_true_IF_NULL_i1_i_i_i_i_i);
LoadInst* ptr_367 = new LoadInst(ptr_360, "", false, label_true_IF_NULL_i1_i_i_i_i_i);
ICmpInst* int1_368 = new ICmpInst(*label_true_IF_NULL_i1_i_i_i_i_i, ICmpInst::ICMP_EQ, ptr_367, const_ptr_90, "");
BranchInst::Create(label_GOTO_or_IF_1_i3_i_i_i_i_i, label_false_IFNE_i7_i_i_i_i_i, int1_368, label_true_IF_NULL_i1_i_i_i_i_i);

// Block GOTO or IF*1.i3.i.i.i.i.i (label_GOTO_or_IF_1_i3_i_i_i_i_i)
CastInst* ptr_370 = new BitCastInst(ptr_359, PointerTy_31, "", label_GOTO_or_IF_1_i3_i_i_i_i_i);
CastInst* ptr__c1_i2_i_i_i_i_i = new IntToPtrInst(int32_190, PointerTy_27, ".c1.i2.i.i.i.i.i", label_GOTO_or_IF_1_i3_i_i_i_i_i);
 new StoreInst(ptr__c1_i2_i_i_i_i_i, ptr_370, false, label_GOTO_or_IF_1_i3_i_i_i_i_i);
LoadInst* ptr_372 = new LoadInst(ptr_195, "", false, label_GOTO_or_IF_1_i3_i_i_i_i_i);
ICmpInst* int1_373 = new ICmpInst(*label_GOTO_or_IF_1_i3_i_i_i_i_i, ICmpInst::ICMP_EQ, ptr_372, const_ptr_81, "");
BranchInst::Create(label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit, label_true_IFNULL3_i8_i_i_i_i_i, int1_373, label_GOTO_or_IF_1_i3_i_i_i_i_i);

// Block true IFNULL.i5.i.i.i.i.i (label_true_IFNULL_i5_i_i_i_i_i)
GetElementPtrInst* ptr_375 = GetElementPtrInst::Create(ptr_196, const_int32_59, "", label_true_IFNULL_i5_i_i_i_i_i);
CastInst* ptr_376 = new BitCastInst(ptr_375, PointerTy_23, "", label_true_IFNULL_i5_i_i_i_i_i);
BranchInst::Create(label_bb2_i_i22_i, label_true_IFNULL_i5_i_i_i_i_i);

// Block bb.i.i20.i (label_bb_i_i20_i)
Argument* fwdref_379 = new Argument(IntegerType::get(mod->getContext(), 1));
BranchInst::Create(label_true_IF_NULL_i1_i_i_i_i_i, label_bb1_i_i21_i, fwdref_379, label_bb_i_i20_i);

// Block bb1.i.i21.i (label_bb1_i_i21_i)
Argument* fwdref_381 = new Argument(IntegerType::get(mod->getContext(), 32));
BinaryOperator* int32_380 = BinaryOperator::Create(Instruction::Add, fwdref_381, const_int32_74, "", label_bb1_i_i21_i);
BranchInst::Create(label_bb2_i_i22_i, label_bb1_i_i21_i);

// Block bb2.i.i22.i (label_bb2_i_i22_i)
PHINode* int32_383 = PHINode::Create(IntegerType::get(mod->getContext(), 32), "", label_bb2_i_i22_i);
int32_383->reserveOperandSpace(2);
int32_383->addIncoming(const_int32_53, label_true_IFNULL_i5_i_i_i_i_i);
int32_383->addIncoming(int32_380, label_bb1_i_i21_i);

ICmpInst* int1_384 = new ICmpInst(*label_bb2_i_i22_i, ICmpInst::ICMP_ULT, int32_383, const_int32_91, "");
std::vector<Value*> void_385_params;
void_385_params.push_back(const_int1_92);
void_385_params.push_back(const_int1_92);
void_385_params.push_back(const_int1_92);
void_385_params.push_back(const_int1_92);
void_385_params.push_back(const_int1_92);
CallInst* void_385 = CallInst::Create(func_llvm_memory_barrier, void_385_params.begin(), void_385_params.end(), "", label_bb2_i_i22_i);
void_385->setCallingConv(CallingConv::C);
void_385->setTailCall(true);
AttrListPtr void_385_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 void_385_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
void_385->setAttributes(void_385_PAL);

std::vector<Value*> int32_386_params;
int32_386_params.push_back(ptr_376);
int32_386_params.push_back(const_int32_53);
int32_386_params.push_back(const_int32_74);
CallInst* int32_386 = CallInst::Create(func_llvm_atomic_cmp_swap_i32_p0i32, int32_386_params.begin(), int32_386_params.end(), "", label_bb2_i_i22_i);
int32_386->setCallingConv(CallingConv::C);
int32_386->setTailCall(true);
AttrListPtr int32_386_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 int32_386_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
int32_386->setAttributes(int32_386_PAL);

std::vector<Value*> void_387_params;
void_387_params.push_back(const_int1_92);
void_387_params.push_back(const_int1_92);
void_387_params.push_back(const_int1_92);
void_387_params.push_back(const_int1_92);
void_387_params.push_back(const_int1_92);
CallInst* void_387 = CallInst::Create(func_llvm_memory_barrier, void_387_params.begin(), void_387_params.end(), "", label_bb2_i_i22_i);
void_387->setCallingConv(CallingConv::C);
void_387->setTailCall(true);
AttrListPtr void_387_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 void_387_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
void_387->setAttributes(void_387_PAL);

ICmpInst* int1_388 = new ICmpInst(*label_bb2_i_i22_i, ICmpInst::ICMP_EQ, int32_386, const_int32_53, "");
BranchInst::Create(label_bb_i_i20_i, label_bb4_preheader_i_i23_i, int1_384, label_bb2_i_i22_i);

// Block bb4.preheader.i.i23.i (label_bb4_preheader_i_i23_i)
BranchInst::Create(label_true_IF_NULL_i1_i_i_i_i_i, label_bb3_i_i24_i, int1_388, label_bb4_preheader_i_i23_i);

// Block bb3.i.i24.i (label_bb3_i_i24_i)
CallInst* void_391 = CallInst::Create(func__ZN3mvm6Thread5yieldEv, "", label_bb3_i_i24_i);
void_391->setCallingConv(CallingConv::C);
void_391->setTailCall(true);
AttrListPtr void_391_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 void_391_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
void_391->setAttributes(void_391_PAL);

std::vector<Value*> void_392_params;
void_392_params.push_back(const_int1_92);
void_392_params.push_back(const_int1_92);
void_392_params.push_back(const_int1_92);
void_392_params.push_back(const_int1_92);
void_392_params.push_back(const_int1_92);
CallInst* void_392 = CallInst::Create(func_llvm_memory_barrier, void_392_params.begin(), void_392_params.end(), "", label_bb3_i_i24_i);
void_392->setCallingConv(CallingConv::C);
void_392->setTailCall(true);
AttrListPtr void_392_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 void_392_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
void_392->setAttributes(void_392_PAL);

std::vector<Value*> int32_393_params;
int32_393_params.push_back(ptr_376);
int32_393_params.push_back(const_int32_53);
int32_393_params.push_back(const_int32_74);
CallInst* int32_393 = CallInst::Create(func_llvm_atomic_cmp_swap_i32_p0i32, int32_393_params.begin(), int32_393_params.end(), "", label_bb3_i_i24_i);
int32_393->setCallingConv(CallingConv::C);
int32_393->setTailCall(true);
AttrListPtr int32_393_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 int32_393_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
int32_393->setAttributes(int32_393_PAL);

std::vector<Value*> void_394_params;
void_394_params.push_back(const_int1_92);
void_394_params.push_back(const_int1_92);
void_394_params.push_back(const_int1_92);
void_394_params.push_back(const_int1_92);
void_394_params.push_back(const_int1_92);
CallInst* void_394 = CallInst::Create(func_llvm_memory_barrier, void_394_params.begin(), void_394_params.end(), "", label_bb3_i_i24_i);
void_394->setCallingConv(CallingConv::C);
void_394->setTailCall(true);
AttrListPtr void_394_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 void_394_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
void_394->setAttributes(void_394_PAL);

ICmpInst* int1_395 = new ICmpInst(*label_bb3_i_i24_i, ICmpInst::ICMP_EQ, int32_393, const_int32_53, "");
BranchInst::Create(label_true_IF_NULL_i1_i_i_i_i_i, label_bb3_i_i24_i, int1_395, label_bb3_i_i24_i);

// Block false IFNE.i7.i.i.i.i.i (label_false_IFNE_i7_i_i_i_i_i)
std::vector<Value*> ptr_397_indices;
ptr_397_indices.push_back(const_int32_53);
ptr_397_indices.push_back(const_int32_53);
Instruction* ptr_397 = GetElementPtrInst::Create(ptr_367, ptr_397_indices.begin(), ptr_397_indices.end(), "", label_false_IFNE_i7_i_i_i_i_i);
CastInst* ptr__c_i6_i_i_i_i_i = new IntToPtrInst(int32_190, PointerTy_27, ".c.i6.i.i.i.i.i", label_false_IFNE_i7_i_i_i_i_i);
 new StoreInst(ptr__c_i6_i_i_i_i_i, ptr_397, false, label_false_IFNE_i7_i_i_i_i_i);
BranchInst::Create(label_GOTO_or_IF_1_i3_i_i_i_i_i, label_false_IFNE_i7_i_i_i_i_i);

// Block true IFNULL3.i8.i.i.i.i.i (label_true_IFNULL3_i8_i_i_i_i_i)
GetElementPtrInst* ptr_400 = GetElementPtrInst::Create(ptr_372, const_int32_59, "", label_true_IFNULL3_i8_i_i_i_i_i);
CastInst* ptr_401 = new BitCastInst(ptr_400, PointerTy_23, "", label_true_IFNULL3_i8_i_i_i_i_i);
 new StoreInst(const_int32_53, ptr_401, false, label_true_IFNULL3_i8_i_i_i_i_i);
BranchInst::Create(label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit, label_true_IFNULL3_i8_i_i_i_i_i);

// Block true IF*NULL.i1.i.i6.i.i.i (label_true_IF_NULL_i1_i_i6_i_i_i)
std::vector<Value*> ptr_404_indices;
ptr_404_indices.push_back(const_int32_53);
ptr_404_indices.push_back(const_int32_53);
Instruction* ptr_404 = GetElementPtrInst::Create(ptr_267, ptr_404_indices.begin(), ptr_404_indices.end(), "", label_true_IF_NULL_i1_i_i6_i_i_i);
 new StoreInst(const_ptr_75, ptr_404, false, label_true_IF_NULL_i1_i_i6_i_i_i);
GetElementPtrInst* ptr_406 = GetElementPtrInst::Create(ptr_269, const_int32_59, "", label_true_IF_NULL_i1_i_i6_i_i_i);
CastInst* ptr_407 = new BitCastInst(ptr_406, PointerTy_25, "", label_true_IF_NULL_i1_i_i6_i_i_i);
LoadInst* ptr_408 = new LoadInst(ptr_407, "", false, label_true_IF_NULL_i1_i_i6_i_i_i);
LoadInst* ptr_409 = new LoadInst(const_ptr_89, "", false, label_true_IF_NULL_i1_i_i6_i_i_i);
CastInst* int32_410 = new PtrToIntInst(ptr_409, IntegerType::get(mod->getContext(), 32), "", label_true_IF_NULL_i1_i_i6_i_i_i);
BinaryOperator* int32_411 = BinaryOperator::Create(Instruction::Add, int32_410, int32_266, "", label_true_IF_NULL_i1_i_i6_i_i_i);
CastInst* ptr_412 = new IntToPtrInst(int32_411, PointerTy_25, "", label_true_IF_NULL_i1_i_i6_i_i_i);
 new StoreInst(ptr_408, ptr_412, false, label_true_IF_NULL_i1_i_i6_i_i_i);
LoadInst* ptr_414 = new LoadInst(ptr_407, "", false, label_true_IF_NULL_i1_i_i6_i_i_i);
ICmpInst* int1_415 = new ICmpInst(*label_true_IF_NULL_i1_i_i6_i_i_i, ICmpInst::ICMP_EQ, ptr_414, const_ptr_90, "");
BranchInst::Create(label_GOTO_or_IF_1_i3_i_i8_i_i_i, label_false_IFNE_i7_i_i11_i_i_i, int1_415, label_true_IF_NULL_i1_i_i6_i_i_i);

// Block GOTO or IF*1.i3.i.i8.i.i.i (label_GOTO_or_IF_1_i3_i_i8_i_i_i)
CastInst* ptr_417 = new BitCastInst(ptr_406, PointerTy_31, "", label_GOTO_or_IF_1_i3_i_i8_i_i_i);
CastInst* ptr__c1_i2_i_i7_i_i_i = new IntToPtrInst(int32_266, PointerTy_27, ".c1.i2.i.i7.i.i.i", label_GOTO_or_IF_1_i3_i_i8_i_i_i);
 new StoreInst(ptr__c1_i2_i_i7_i_i_i, ptr_417, false, label_GOTO_or_IF_1_i3_i_i8_i_i_i);
LoadInst* ptr_419 = new LoadInst(ptr_271, "", false, label_GOTO_or_IF_1_i3_i_i8_i_i_i);
ICmpInst* int1_420 = new ICmpInst(*label_GOTO_or_IF_1_i3_i_i8_i_i_i, ICmpInst::ICMP_EQ, ptr_419, const_ptr_81, "");
BranchInst::Create(label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit, label_true_IFNULL3_i8_i_i12_i_i_i, int1_420, label_GOTO_or_IF_1_i3_i_i8_i_i_i);

// Block true IFNULL.i5.i.i9.i.i.i (label_true_IFNULL_i5_i_i9_i_i_i)
GetElementPtrInst* ptr_422 = GetElementPtrInst::Create(ptr_272, const_int32_59, "", label_true_IFNULL_i5_i_i9_i_i_i);
CastInst* ptr_423 = new BitCastInst(ptr_422, PointerTy_23, "", label_true_IFNULL_i5_i_i9_i_i_i);
BranchInst::Create(label_bb2_i_i_i, label_true_IFNULL_i5_i_i9_i_i_i);

// Block bb.i.i.i (label_bb_i_i_i)
Argument* fwdref_426 = new Argument(IntegerType::get(mod->getContext(), 1));
BranchInst::Create(label_true_IF_NULL_i1_i_i6_i_i_i, label_bb1_i_i_i, fwdref_426, label_bb_i_i_i);

// Block bb1.i.i.i (label_bb1_i_i_i)
Argument* fwdref_428 = new Argument(IntegerType::get(mod->getContext(), 32));
BinaryOperator* int32_427 = BinaryOperator::Create(Instruction::Add, fwdref_428, const_int32_74, "", label_bb1_i_i_i);
BranchInst::Create(label_bb2_i_i_i, label_bb1_i_i_i);

// Block bb2.i.i.i (label_bb2_i_i_i)
PHINode* int32_430 = PHINode::Create(IntegerType::get(mod->getContext(), 32), "", label_bb2_i_i_i);
int32_430->reserveOperandSpace(2);
int32_430->addIncoming(const_int32_53, label_true_IFNULL_i5_i_i9_i_i_i);
int32_430->addIncoming(int32_427, label_bb1_i_i_i);

ICmpInst* int1_431 = new ICmpInst(*label_bb2_i_i_i, ICmpInst::ICMP_ULT, int32_430, const_int32_91, "");
std::vector<Value*> void_432_params;
void_432_params.push_back(const_int1_92);
void_432_params.push_back(const_int1_92);
void_432_params.push_back(const_int1_92);
void_432_params.push_back(const_int1_92);
void_432_params.push_back(const_int1_92);
CallInst* void_432 = CallInst::Create(func_llvm_memory_barrier, void_432_params.begin(), void_432_params.end(), "", label_bb2_i_i_i);
void_432->setCallingConv(CallingConv::C);
void_432->setTailCall(true);
AttrListPtr void_432_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 void_432_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
void_432->setAttributes(void_432_PAL);

std::vector<Value*> int32_433_params;
int32_433_params.push_back(ptr_423);
int32_433_params.push_back(const_int32_53);
int32_433_params.push_back(const_int32_74);
CallInst* int32_433 = CallInst::Create(func_llvm_atomic_cmp_swap_i32_p0i32, int32_433_params.begin(), int32_433_params.end(), "", label_bb2_i_i_i);
int32_433->setCallingConv(CallingConv::C);
int32_433->setTailCall(true);
AttrListPtr int32_433_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 int32_433_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
int32_433->setAttributes(int32_433_PAL);

std::vector<Value*> void_434_params;
void_434_params.push_back(const_int1_92);
void_434_params.push_back(const_int1_92);
void_434_params.push_back(const_int1_92);
void_434_params.push_back(const_int1_92);
void_434_params.push_back(const_int1_92);
CallInst* void_434 = CallInst::Create(func_llvm_memory_barrier, void_434_params.begin(), void_434_params.end(), "", label_bb2_i_i_i);
void_434->setCallingConv(CallingConv::C);
void_434->setTailCall(true);
AttrListPtr void_434_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 void_434_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
void_434->setAttributes(void_434_PAL);

ICmpInst* int1_435 = new ICmpInst(*label_bb2_i_i_i, ICmpInst::ICMP_EQ, int32_433, const_int32_53, "");
BranchInst::Create(label_bb_i_i_i, label_bb4_preheader_i_i_i, int1_431, label_bb2_i_i_i);

// Block bb4.preheader.i.i.i (label_bb4_preheader_i_i_i)
BranchInst::Create(label_true_IF_NULL_i1_i_i6_i_i_i, label_bb3_i_i_i, int1_435, label_bb4_preheader_i_i_i);

// Block bb3.i.i.i (label_bb3_i_i_i)
CallInst* void_438 = CallInst::Create(func__ZN3mvm6Thread5yieldEv, "", label_bb3_i_i_i);
void_438->setCallingConv(CallingConv::C);
void_438->setTailCall(true);
AttrListPtr void_438_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 void_438_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
void_438->setAttributes(void_438_PAL);

std::vector<Value*> void_439_params;
void_439_params.push_back(const_int1_92);
void_439_params.push_back(const_int1_92);
void_439_params.push_back(const_int1_92);
void_439_params.push_back(const_int1_92);
void_439_params.push_back(const_int1_92);
CallInst* void_439 = CallInst::Create(func_llvm_memory_barrier, void_439_params.begin(), void_439_params.end(), "", label_bb3_i_i_i);
void_439->setCallingConv(CallingConv::C);
void_439->setTailCall(true);
AttrListPtr void_439_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 void_439_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
void_439->setAttributes(void_439_PAL);

std::vector<Value*> int32_440_params;
int32_440_params.push_back(ptr_423);
int32_440_params.push_back(const_int32_53);
int32_440_params.push_back(const_int32_74);
CallInst* int32_440 = CallInst::Create(func_llvm_atomic_cmp_swap_i32_p0i32, int32_440_params.begin(), int32_440_params.end(), "", label_bb3_i_i_i);
int32_440->setCallingConv(CallingConv::C);
int32_440->setTailCall(true);
AttrListPtr int32_440_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 int32_440_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
int32_440->setAttributes(int32_440_PAL);

std::vector<Value*> void_441_params;
void_441_params.push_back(const_int1_92);
void_441_params.push_back(const_int1_92);
void_441_params.push_back(const_int1_92);
void_441_params.push_back(const_int1_92);
void_441_params.push_back(const_int1_92);
CallInst* void_441 = CallInst::Create(func_llvm_memory_barrier, void_441_params.begin(), void_441_params.end(), "", label_bb3_i_i_i);
void_441->setCallingConv(CallingConv::C);
void_441->setTailCall(true);
AttrListPtr void_441_PAL;
{
 SmallVector<AttributeWithIndex, 4> Attrs;
 AttributeWithIndex PAWI;
 PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
 Attrs.push_back(PAWI);
 void_441_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
 
}
void_441->setAttributes(void_441_PAL);

ICmpInst* int1_442 = new ICmpInst(*label_bb3_i_i_i, ICmpInst::ICMP_EQ, int32_440, const_int32_53, "");
BranchInst::Create(label_true_IF_NULL_i1_i_i6_i_i_i, label_bb3_i_i_i, int1_442, label_bb3_i_i_i);

// Block false IFNE.i7.i.i11.i.i.i (label_false_IFNE_i7_i_i11_i_i_i)
std::vector<Value*> ptr_444_indices;
ptr_444_indices.push_back(const_int32_53);
ptr_444_indices.push_back(const_int32_53);
Instruction* ptr_444 = GetElementPtrInst::Create(ptr_414, ptr_444_indices.begin(), ptr_444_indices.end(), "", label_false_IFNE_i7_i_i11_i_i_i);
CastInst* ptr__c_i6_i_i10_i_i_i = new IntToPtrInst(int32_266, PointerTy_27, ".c.i6.i.i10.i.i.i", label_false_IFNE_i7_i_i11_i_i_i);
 new StoreInst(ptr__c_i6_i_i10_i_i_i, ptr_444, false, label_false_IFNE_i7_i_i11_i_i_i);
BranchInst::Create(label_GOTO_or_IF_1_i3_i_i8_i_i_i, label_false_IFNE_i7_i_i11_i_i_i);

// Block true IFNULL3.i8.i.i12.i.i.i (label_true_IFNULL3_i8_i_i12_i_i_i)
GetElementPtrInst* ptr_447 = GetElementPtrInst::Create(ptr_419, const_int32_59, "", label_true_IFNULL3_i8_i_i12_i_i_i);
CastInst* ptr_448 = new BitCastInst(ptr_447, PointerTy_23, "", label_true_IFNULL3_i8_i_i12_i_i_i);
 new StoreInst(const_int32_53, ptr_448, false, label_true_IFNULL3_i8_i_i12_i_i_i);
BranchInst::Create(label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit, label_true_IFNULL3_i8_i_i12_i_i_i);

// Block JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2.exit (label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit)
PHINode* ptr_451 = PHINode::Create(PointerTy_26, "", label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit);
ptr_451->reserveOperandSpace(8);
ptr_451->addIncoming(ptr_253, label_true_IFNULL3_i8_i_i12_i_i_i);
ptr_451->addIncoming(ptr__ph16_i, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread17_i);
ptr_451->addIncoming(ptr_177, label_true_IFNULL3_i8_i_i_i_i_i);
ptr_451->addIncoming(ptr__ph12_i, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread13_i);
ptr_451->addIncoming(ptr__ph8_i, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread9_i);
ptr_451->addIncoming(ptr__ph_i, label_JnJVM_org_mmtk_plan_marksweep_MSMutator_alloc__IIIII_exit_thread_i);
ptr_451->addIncoming(ptr_253, label_GOTO_or_IF_1_i3_i_i8_i_i_i);
ptr_451->addIncoming(ptr_177, label_GOTO_or_IF_1_i3_i_i_i_i_i);

CastInst* ptr_tmp1 = new BitCastInst(ptr_451, PointerTy_0, "tmp1", label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit);
ReturnInst::Create(mod->getContext(), ptr_tmp1, label_JnJVM_org_j3_bindings_Bindings_gcmalloc__ILorg_vmmagic_unboxed_ObjectReference_2_exit);

// Resolve Forward References
fwdref_381->replaceAllUsesWith(int32_383); delete fwdref_381;
fwdref_379->replaceAllUsesWith(int1_388); delete fwdref_379;
fwdref_428->replaceAllUsesWith(int32_430); delete fwdref_428;
fwdref_426->replaceAllUsesWith(int1_435); delete fwdref_426;
return func_gcmalloc;
}
